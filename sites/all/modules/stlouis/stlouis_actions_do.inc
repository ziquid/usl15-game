<?php

/**
 * @file stlouis_actions_do.inc
 * Includes for special functions.
 *
 * Synced with CG: no
 * Synced with 2114: no
 */

function _stlouis_action_create_a_clan_function(&$outcome_reason, $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $action_id = $arg3;
  $can_do_again = FALSE;

  $clan_name = trim(check_plain($_GET['name']));
  $clan_acronym = trim(check_plain($_GET['acronym']));

  $sql = 'select * from clan_members where fkey_users_id = %d;';

  // Limited to 1 in db.
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);
firep($item);

  // Already a member of a clan.
  if (!empty($item)) {
    $outcome_reason = '<div class="land-failed">' .
      t('Already a member of a clan!') .
      '</div><div class="action-effect">You already belong to a clan.&nbsp;
      You must secede from it first.</div>';
    return FALSE;
  }

  // Do they have the appropriate aides?
  $sql = 'select sum(clan_size * quantity) as max_clan_size from users
    left join equipment_ownership
    on equipment_ownership.fkey_users_id = users.id
    left join equipment
    on equipment_ownership.fkey_equipment_id = equipment.id
    where users.id = %d;';
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);
firep($item);
  $max_clan_size = $item->max_clan_size;

  // No aides to create a clan.
  if ($max_clan_size <= 0) {
    $outcome_reason = '<div class="land-failed">' .
      t('No place to hold meetings!') .
      '</div><div class="action-effect">You need a place to hold
      your clan meetings.</div>';
    return FALSE;
  }


  // Didn't fill both out.
  if (empty($clan_name) XOR empty($clan_acronym)) {

    $form_reminder = '<div class="land-failed">' .
      t('Both fields are required') .
      '</div><div class="action-effect">Please give both a name and three
        letters for your clan.</div>';

  }

  // Ask for name, acronym.
  if (empty($clan_name) || empty($clan_acronym)) {

    $outcome_reason = $form_reminder;
    $outcome_reason .=<<< EOF
<div class="ask-clan-name">
<form method=get action="/$game/actions_do/$phone_id/$action_id">
  <p>What will you name your clan?</p>
  <input type="text" name="name" size="32" maxlength="32"/>
  <p>Which three letters should appear<br/>after members' names?</p>
  <input type="text" name="acronym" size="3" maxlength="3"/>
  <input type="submit" value="Submit"/>
</form>
</div>
EOF;

    return FALSE;

  }

  // See if the clan already exists.
  $sql = 'select * from clans where acronym = "%s" or name = "%s" limit 1;';
  $result = db_query($sql, $clan_acronym, $clan_name);
  $item = db_fetch_object($result);
firep($item);

  // Clan does exist.
  if (!empty($item)) {

    $outcome_reason = '<div class="land-failed">' .
      t('You have chosen an existing clan name or set of three letters') .
      '</div><div class="action-effect">Please check that you enter a unique
      clan name and three letters and try again</div>
      <div class="try-an-election-wrapper"><div
      class="try-an-election"><a
      href="/' . $game . '/actions_do/' . $phone_id . '/' . $action_id .
      '">Try again</a></div></div>';

    return FALSE;
  }

  // Create it!
  $sql = 'insert into clans (name, acronym) values ("%s", "%s");';
  db_query($sql, $clan_name, $clan_acronym);

  $sql = 'insert into clan_members (fkey_clans_id, fkey_users_id,
    is_clan_leader) values ((select id from clans where name = "%s"),
    %d, 1);';
  db_query($sql, $clan_name, $game_user->id);

  $outcome_reason .= '<div class="action-effect">The clan ' .
    $clan_name . ' (' . $clan_acronym . ') has been created!';

  return TRUE;
}

function _stlouis_action_join_a_clan_function(&$outcome_reason, $target,
  &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';

  $remove_value = '_' . $game . '_remove_value';

  $game_user = zg_fetch_user();
  $action_id = $arg3;
  $can_do_again = FALSE;

  $clan_acronym = check_plain($_GET['acronym']);

  $sql = 'select * from clan_members where fkey_users_id = %d;';
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);

  if (!empty($item)) {
    $outcome_reason = '<div class="land-failed">' .
      t('Already a member of a clan!') .
      '</div><div class="action-effect">You already belong to a clan.&nbsp;
      You must leave it first.</div>';
    return FALSE;
  }

  if (empty($clan_acronym)) {

    $outcome_reason = <<< EOF
<div class="ask-clan-name">
<form method=get action="/$game/actions_do/$arg2/$action_id">
  <p>Which clan would you like to join (three letters)?</p>
  <input type="text" name="acronym" size="3" maxlength="3"/>
  <input type="submit" value="Submit"/>
</form>
</div>
EOF;

    return FALSE;
  }

  // Does clan exist?
  $sql = 'select * from clans where acronym = "%s";';
  $result = db_query($sql, $clan_acronym);
  $item = db_fetch_object($result);

  // Clan does not exist.
  if (empty($item)) {
    $outcome_reason = '<div class="land-failed">' .
      t('The %clan clan does not exist', ['%clan' => $clan_acronym]) .
      '</div><div class="action-effect">Please check that you entered the
      clan\'s three letters correctly and try again</div>
      <div class="try-an-election-wrapper"><div
      class="try-an-election"><a
      href="/' . $game . '/actions_do/' . $phone_id . '/' . $action_id .
      '">Try again</a></div></div>';

    return FALSE;
  }

  $clan_name = $item->name;
  $clan_id = $item->id;
  $clan_password = strtolower($item->password);

  // Find clan leader.
  $sql = 'select users.fkey_values_id, users.id from clan_members
    left join clans on clan_members.fkey_clans_id = clans.id
    left join users on clan_members.fkey_users_id = users.id
    where clans.id = %d and clan_members.is_clan_leader = 1;';
  $result = db_query($sql, $clan_id);
  $item = db_fetch_object($result);
firep($item, 'party of clan leader');
  $clan_leader_id = $item->id;

  // No clan leader?
  if (empty($clan_leader_id)) {
    $outcome_reason = '<div class="land-failed">' .
      t('No clan leader') .
      '</div><div class="action-effect">' .
      t('That clan has no leader') . '</div>';
    return FALSE;
  }

  // Find political party.
  $sql = 'select users.fkey_values_id, users.id from clan_members
    left join clans on clan_members.fkey_clans_id = clans.id
    left join users on clan_members.fkey_users_id = users.id
    where clans.id = %d limit 1;';
  $result = db_query($sql, $clan_id);
  $item = db_fetch_object($result);
  firep($item, 'party of clan');

  // Different political party?
  if ($item->fkey_values_id != $game_user->fkey_values_id) {
    $outcome_reason = '<div class="land-failed">' .
      t('Different political party') .
      '</div><div class="action-effect">' .
      t('That clan belongs to a different political party') . '</div>';
    return FALSE;
  }

  // Enough room for all clan members?
  $sql = 'select sum(clan_size * quantity) as max_clan_size from users
    left join equipment_ownership
    on equipment_ownership.fkey_users_id = users.id
    left join equipment
    on equipment_ownership.fkey_equipment_id = equipment.id
    where users.id = %d;';
  $result = db_query($sql, $clan_leader_id);
  $item = db_fetch_object($result);
firep($item);
  $max_clan_size = $item->max_clan_size;

  $sql = 'select count(id) as current_clan_size from clan_members
    where fkey_clans_id = %d;';
  $result = db_query($sql, $clan_id);
  $item = db_fetch_object($result);
firep($item);
  $current_clan_size = $item->current_clan_size;

  if ($current_clan_size >= $max_clan_size) {
    $outcome_reason = '<div class="land-failed">' .
      t('The clan is full!') .
      '</div><div class="action-effect">' .
      t('There is no room for new members in this clan.  ' .
        'This clan can only hold @num members.',
        ['@num' => $max_clan_size]) . '</div>';
    return FALSE;
  }

  $password = strtolower(trim(check_plain($_GET['password'])));

  // Need a password.
  if (!empty($clan_password) && empty($password)) {

    $outcome_reason = '<div class="land-failed">' .
      t('Enter the password') .
      '</div><div class="action-effect">' .
      t('This clan has a password.  What is it?') . '</div>';

    $outcome_reason .=<<< EOF
<div class="ask-clan-name">
<form method=get action="/$game/actions_do/$arg2/$action_id">
  <input type="hidden" name="acronym" value="$clan_acronym"/>
  <input type="text" name="password" size="6" maxlength="6"/>
  <input type="submit" value="Submit"/>
</form>
</div>
EOF;

    return FALSE;
  }

  // Wrong password.
  if (!empty($clan_password) && ($clan_password != $password)) {

    $outcome_reason = '<div class="land-failed">' .
      t('Wrong password!') .
      '</div><div class="action-effect">' .
      t('The password you entered is incorrect.') . '</div>';

    return FALSE;
  }

  // Prohibited from joining for a time?
  $join_allowed_time = zg_get_value($game_user, 'cant_join_clan', 0);
  $now = REQUEST_TIME;
firep($join_allowed_time, 'allowed time');
firep($now, 'time now');

  // Can't join yet!
  if ($now < $join_allowed_time) {

    $min = floor(($join_allowed_time - $now) / 60);
    $sec = ($join_allowed_time - $now) % 60;

    $outcome_reason = '<div class="land-failed">' .
      t('Too soon!') .
      '</div><div class="action-effect">' .
      t('You can join a clan in @min minutes and @sec seconds',
        ['@min' => $min, '@sec' => $sec])
      . '</div>';

    return FALSE;
  }

  // Join succeeded!
  $remove_value($target_id, 'cant_join_clan');
  $sql = 'insert into clan_members (fkey_clans_id, fkey_users_id,
    is_clan_leader) values ((select id from clans where acronym = "%s"),
    %d, 0);';
  db_query($sql, $clan_acronym, $game_user->id);

  $sql = 'insert into clan_messages (fkey_users_from_id,
    fkey_neighborhoods_id, message) values
    (%d, (select id from clans where acronym = "%s"), "%s");';
  $message = $game_user->username . ' has joined your clan.  Please welcome
    him or her.';
  db_query($sql, $game_user->id, $clan_acronym, $message);

  $outcome_reason .= '<div class="action-effect">You have successfully joined
    the ' . $clan_name . ' (' . $clan_acronym . ') clan!';

  $can_do_again = FALSE;
  return TRUE;
}

function _stlouis_action_leave_your_clan_function(&$outcome_reason, $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $action_id = $arg3;
  $can_do_again = FALSE;

  // Not a member of a clan.
  if (empty($game_user->fkey_clans_id)) {

    $outcome_reason = '<div class="land-failed">' .
      t('Not a member of a clan!') .
      '</div><div class="action-effect">You don\'t belong to a clan.&nbsp;
      You cannot leave it.</div>';
    return FALSE;
  }

  $sql = 'select * from clan_members where fkey_users_id = %d;';
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);

  // Clan leader? Delete entire clan.
  if ($item->is_clan_leader) {

    $sure = check_plain($_GET['sure']);
    if ($sure != 'yes') {

      $outcome_reason = '<div class="subtitle">Are you sure?</div>
        <div class="subsubtitle">
          This dissolves <strong>the entire clan</strong> and cannot be undone!
        </div>
        <div class="try-an-election-wrapper">
          <div class="try-an-election">
            <a href="/' . $game . '/actions_do/' .
            $phone_id . '/' . $action_id . '?sure=yes">Yes,  I\'m sure</a>
          </div>
          <div class="try-an-election">
            <a href="/' . $game . '/actions/' . $phone_id .
            '">No, I\'m not sure</a>
          </div>
        </div>';

      return FALSE;
    }

    $sql = 'delete from clan_messages where fkey_neighborhoods_id = %d;';
    db_query($sql, $game_user->fkey_clans_id);
    $sql = 'delete from clan_members where fkey_clans_id = %d;';
    db_query($sql, $game_user->fkey_clans_id);
    $sql = 'delete from clans where id = %d;';
    db_query($sql, $game_user->fkey_clans_id);
    $outcome_reason .= '<div class="action-effect">' .
      t('You have dissolved your clan') . '</div>';
  }
  else {

    $sql = 'delete from clan_members where fkey_users_id = %d;';
    db_query($sql, $game_user->id);
    $sql = 'delete from clan_messages where fkey_users_from_id = %d;';
    db_query($sql, $game_user->id);

    // Tell the clan.
    $sql = 'insert into clan_messages (fkey_users_from_id,
      fkey_neighborhoods_id, message) values (%d, %d, "%s");';
    $message = $game_user->username . ' has left your clan.';
    db_query($sql, $game_user->id, $game_user->fkey_clans_id, $message);

    $outcome_reason .= '<div class="action-effect">' .
      t('You have left your clan') . '</div>';
  }

  return TRUE;
}

function _stlouis_action_remove_a_clan_member_function(&$outcome_reason, $target, &$can_do_again) {
  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $can_do_again = FALSE;

  $target_name = $target->ep_name . ' ' . $target->username;
  $target_id = $_GET['target'];

  $sql = 'select * from clan_members where fkey_users_id = %d;';
  $result = db_query($sql, $target_id);
  $item = db_fetch_object($result);

  // Not a member of any or the same clan?
  if (empty($item) || ($item->fkey_clans_id != $game_user->fkey_clans_id)) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not a member of your clan!') .
      '</div><div class="action-effect">' . $target_name .
      ' doesn\'t belong to your clan.&nbsp; You cannot remove him or her.</div>';
    return FALSE;
  }

  // Clan leader? must dissolve clan instead.
  if ($item->is_clan_leader) {
    $outcome_reason = '<div class="land-failed">' .
      t('Clan leader!') .
      '</div><div class="action-effect">' . $target_name .
      ' is a clan leader and cannot be removed.</div>';
    return FALSE;
  }

  $sql = 'delete from clan_members where fkey_users_id = %d;';
  db_query($sql, $target_id);

  $sql = 'delete from clan_messages where fkey_users_from_id = %d;';
  db_query($sql, $target_id);

  zg_set_timer($target_id, 'cant_join_clan', 7200);

  $sql = 'insert into clan_messages (fkey_users_from_id,
    fkey_neighborhoods_id, message) values (%d, %d, "%s");';
  $message = $target_name . ' has been forcibly removed from your clan.';
  db_query($sql, $game_user->id, $game_user->fkey_clans_id,
    $message);

  $outcome_reason .= '<div class="action-effect">' .
    t('@name has been removed from your clan',
    ['@name' => $target_name]) . '</div>';

  return TRUE;
}

function _stlouis_action_change_clan_leadership_function(&$outcome_reason,
  $target, &$can_do_again) {

  global $game;

  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $target_name = $target->ep_name . ' ' . $target->username;
  $target_id = $_GET['target'];

  $sql = 'select * from clan_members where fkey_users_id = %d
    AND fkey_clans_id = %d;';
  $result = db_query($sql, $target_id, $game_user->fkey_clans_id);
  $item = db_fetch_object($result);

  // Not a member of the clan?
  if (empty($item)) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not a member of your clan!') .
      '</div><div class="action-effect">' . $target_name .
      ' doesn\'t belong to your clan.&nbsp; You cannot have him or her lead.</div>';
    return FALSE;
  }

  // Enough room for all clan members?
  $sql = 'select sum(clan_size * quantity) as max_clan_size from users
    left join equipment_ownership
    on equipment_ownership.fkey_users_id = users.id
    left join equipment
    on equipment_ownership.fkey_equipment_id = equipment.id
    where users.id = %d;';
  $result = db_query($sql, $target_id);
  $item = db_fetch_object($result);
  firep($item, 'max clan size');
  $max_clan_size = $item->max_clan_size;

  $sql = 'select count(id) as current_clan_size from clan_members
    where fkey_clans_id = %d;';
  $result = db_query($sql, $game_user->fkey_clans_id);
  $item = db_fetch_object($result);
  firep($item, 'current clan size');
  $current_clan_size = $item->current_clan_size;

  if ($current_clan_size >= $max_clan_size) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not enough room!') .
      '</div><div class="action-effect">' .
      t('There is not enough room for the members of this clan.  ' .
        '@player only has room for @num.',
        ['@num' => $max_clan_size, '@player' => $target_name]) . '</div>';
    return FALSE;
  }

  $sql = 'update clan_members set is_clan_leader = 0 where fkey_users_id = %d;';
  db_query($sql, $game_user->id);

  $sql = 'update clan_members set is_clan_leader = 1 where fkey_users_id = %d;';
  db_query($sql, $target_id);

  $sql = 'insert into clan_messages (fkey_users_from_id,
    fkey_users_to_id, message) values (%d, %d, "%s");';
  $message = $target_name . ' has been named the new leader of the clan.';
  db_query($sql, $game_user->id, $game_user->fkey_clans_id, $message);

  $outcome_reason .= '<div class="action-effect">' .
    t('@name has been made the leader of your clan',
    ['@name' => $target_name]) . '</div>';

  return TRUE;
}

function _stlouis_action_change_clan_rules_function(&$outcome_reason, $target,
  &$can_do_again) {

  global $game, $phone_id;

  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $action_id = arg(3);

  $clan_rules = check_plain($_GET['rules']);

  $sql = 'select * from clan_members where fkey_users_id = %d;';
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);
firep($item, 'clan member');

  // Ask for rules.
  if (empty($clan_rules)) {

    $sql = 'select rules from clans where id = %d;';
    $result = db_query($sql, $game_user->fkey_clans_id);
    $item = db_fetch_object($result);

    $outcome_reason =<<< EOF
<div class="ask-clan-name">
<form method=get action="/$game/actions_do/$phone_id/$action_id">
  <p>What are your clan rules?</p>
  <textarea name="rules" cols="47" rows="12"/>$item->rules</textarea><br/>
  <input type="submit" value="Submit"/>
</form>
</div>
EOF;

    return FALSE;
  }

  $sql = 'update clans set rules = "%s" where id = %d;';
  db_query($sql, $clan_rules, $game_user->fkey_clans_id);

  $sql = 'insert into clan_messages (fkey_users_from_id,
    fkey_users_to_id, message) values (%d, %d, "%s");';
  $message = 'The clan rules have changed.&nbsp; Please read them at your
    earliest convenience.';
  db_query($sql, $game_user->id, $game_user->fkey_clans_id, $message);

  $outcome_reason .= '<div class="action-effect">
    The clan rules have been changed.
  </div>';

  return TRUE;
}

function _stlouis_action_write_on_a_billboard_function(&$outcome_reason, $target, &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $action_id = $arg3;

  $welcome_msg = check_plain($_GET['welcome_msg']);
  $welcome_msg = _stlouis_filter_profanity($welcome_msg);
firep('welcome message = ' . $welcome_msg);

  $sql = 'select * from elected_officials where fkey_users_id = %d;';

  // Limited to 1 in db.
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);
firep($item);

  $error = '';
  if (substr($welcome_msg, 0, 3) == 'XXX') {
     $error = '<div class="message-error">Your message contains words that are not
        allowed.&nbsp; Please rephrase.&nbsp; ' . $welcome_msg . '</div>';
      $welcome_msg = '';
  }

  // Ask for message.
  if ($welcome_msg == '') {

    $sql = 'select welcome_msg from neighborhoods where id = %d;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id);
    $item = db_fetch_object($result);

    $outcome_reason =<<< EOF
<div class="ask-clan-name">
<form method=get action="/$game/actions_do/$phone_id/$action_id">
  <p>What should the sign state?</p>
  $error
  <textarea name="welcome_msg" cols="28"
    rows="8"/>$item->welcome_msg</textarea><br/>
  <input type="submit" value="Submit"/>
</form>
</div>
EOF;

    return FALSE;
  }

  $sql = 'update neighborhoods set welcome_msg = "%s" where id = %d;';
  db_query($sql, $welcome_msg, $game_user->fkey_neighborhoods_id);

  $sql = 'insert into neighborhood_messages (fkey_users_from_id,
    fkey_neighborhoods_id, message) values (%d, %d, "%s");';
  db_query($sql, $game_user->id, $game_user->fkey_neighborhoods_id,
    $welcome_msg);

  $outcome_reason .= '<div class="action-effect">The sign has been created.</div>';
  return TRUE;
}

function _stlouis_action_change_clan_password_function(&$outcome_reason, $target, &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = _stlouis_fetch_user();
  $action_id = arg(3);

  $clan_password = trim(check_plain($_GET['password']));

  $sql = 'select * from clan_members where fkey_users_id = %d;';
  $result = db_query($sql, $game_user->id);
  $item = db_fetch_object($result);
firep($item);

  // Check to see if clan leader.
  if ($item->is_clan_leader != 1) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not clan leader!') .
      '</div><div class="action-effect">You are not the clan leader.&nbsp;
      You cannot perform this action.</div>';
    return FALSE;
  }

  // Ask for the new password.
  if (empty($clan_password)) {
    $outcome_reason =<<< EOF
<div class="ask-clan-name">
<form method=get action="/$game/actions_do/$phone_id/$action_id">
  <p>What is your clan password (6 characters)?</p>
  <p class="second">Enter <strong>delete</strong> to remove the password</p>
  <input type="text" name="password" size="6" maxlength="6"/>
  <input type="submit" value="Submit"/>
</form>
</div>
EOF;
    return FALSE;
  }

  if (strtolower($clan_password) == 'delete') {
    $clan_password = '';
  }

  $sql = 'update clans set password = "%s" where id = %d;';
  db_query($sql, $clan_password, $game_user->fkey_clans_id);

  $sql = 'insert into clan_messages (fkey_users_from_id,
    fkey_users_to_id, message) values (%d, %d, "%s");';
  $message = 'Notice: the clan password has changed.';
  db_query($sql, $game_user->id, $game_user->fkey_clans_id, $message);

  $outcome_reason .= '<div class="action-effect">The clan password has
    been changed.';
  return TRUE;
}

function _stlouis_action_declare_someone_persona_non_grata_function(&$outcome_reason,
  $target, &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $can_do_again = FALSE;
  $target_id = $_GET['target'];

  if (!_stlouis_check_for_friendly_hood()) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not in a friendly @hood!',
        ['@hood' => $hood_lower]) .
      '</div><div class="action-effect">You must be in friendly territory to
        perform this action.</div>';
    return FALSE;
  }

  $sql = 'SELECT elected_positions.name as ep_name,
    elected_positions.type as ep_type
    FROM `users`

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = users.id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    WHERE users.id = %d';

  $result = db_query($sql, $game_user->id);
  $data = db_fetch_object($result);
  $ep_name = $data->ep_name;
  $ep_type = $data->ep_type;

  $sql = 'select * from users where id = %d;';
  $result = db_query($sql, $target_id);
  $target_user = db_fetch_object($result);
  $actions_required = ceil($target_user->level / 3);
  $money_required = $target_user->level * 35;

  // Actions cap of 50 for alderman.
  if ($ep_type == 1) {
    $actions_required = ceil($target_user->level / 4);
    $actions_required = min($actions_required, 50);
    $money_required = $target_user->level * 25;
  }

  game_alter('png_cost', $game_user, $money_required, $actions_required);

  // Not enough actions.
  if ($game_user->actions < $actions_required) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not enough Action!') .
      '</div><div class="action-effect">You do not have enough Action to
      declare this Level ' . $target_user->level .
      ' player <em>persona non grata</em>.</div>
      <div class="try-an-election-wrapper"><div
      class="try-an-election"><a href="/' . $game . '/elders_do_fill/' .
      $phone_id . '/action?destination=/' .  $game . '/actions/' . $phone_id .
      '">Refill your Action (1&nbsp;Luck)</a></div></div>';
    return FALSE;
  }

  // Not enough money.
  if ($game_user->money < $money_required) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not enough @value', ['@value' => $game_user->values]) .
      '</div><div class="action-effect">You do not have enough ' .
      $game_user->values . ' to declare this Level ' . $target_user->level .
      ' player <em>persona non grata</em>.</div>' .
      zg_luck_money_render_button($game_user, "$game/actions/$arg2");
    return FALSE;
  }

  $location = $game_user->location;

  // Can't boot zombies.
  if ($target_user->meta == 'zombie') {
    $outcome_reason = '<div class="land-failed">' .
      t('Action Failed!') .
      '</div><div class="action-effect">Zombies do not respect political
      borders.&nbsp; Have you tried debating them?</div>';
    return FALSE;
  }

  // Add message to user.
  game_send_user_message($game_user->id, $target_id, 0,
    $ep_name . ' ' . $game_user->username . ' has declared you
    persona non grata.  You have been kicked out of ' . $location . '.', 'png');

  // Move user, empty Action.
  $sql = 'update users set fkey_neighborhoods_id =
    (select fkey_neighborhoods_id from `values` where id = %d),
    actions = 0
    where id = %d;';
  db_query($sql, $target_user->fkey_values_id, $target_id);

  // Deduct your Action, money.
  $sql = 'update users
    set actions = actions - %d, money = money - %d
    where id = %d;';
  db_query($sql, $actions_required, $money_required, $game_user->id);

  // Set major_action counter for three minutes.
  if ($ep_type > 1) {
    zg_set_timer($game_user, 'next_major_action', 180);
  }

  $outcome_reason .= '<div class="action-effect">' . $target_user->username .
    ' has been returned to his or her home neighborhood.';
  return TRUE;
}

function _stlouis_action_roll_call_function(&$outcome_reason, $target, &$can_do_again) {

  global $game, $phone_id;

  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $location = $game_user->location;

  $data = [];
  $sql = 'SELECT username, experience, initiative, endurance,
    elocution, debates_won, debates_lost, skill_points, luck,
    debates_last_time, users.fkey_values_id, level, phone_id,
    `values`.party_title, `values`.party_icon,
    `values`.name, users.id, users.fkey_neighborhoods_id,
    elected_positions.name as ep_name,
    elected_officials.approval_rating,
    clan_members.is_clan_leader,
    clans.name as clan_name, clans.acronym as clan_acronym,
    clans.rules as clan_rules,
    neighborhoods.name as location

    FROM `users`

    LEFT JOIN `values` ON users.fkey_values_id = `values`.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = users.id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id = users.id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    LEFT JOIN neighborhoods on users.fkey_neighborhoods_id = neighborhoods.id

    where ( users.actions_next_gain > "%s" OR users.energy_next_gain > "%s" )
    and users.fkey_neighborhoods_id = %d
    and username <> ""
    and meta <> "admin"
    ORDER by users.experience DESC;';

  $result = db_query($sql, date('Y-m-d', REQUEST_TIME - 1728000),
    date('Y-m-d', REQUEST_TIME - 1728000), $game_user->fkey_neighborhoods_id);
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="action-effect">These players are in $location:
  <div class="elections-header">
    <div class="election-details">
      <div class="clan-title">$politics</div>
      <div class="opponent-name">Name</div>
      <div class="opponent-influence">Stats</div>
    </div>
  </div>
  <div class="elections">
EOF;

  foreach ($data as $item) {
firep($item);

    $username = $item->username;
    if (empty($username)) $username = '<em>Anonymous</em>';

    if ($item->id == $game_user->id) {
      $clan_class = 'election-details me';
    }
    else {
      $clan_class = 'election-details';
    }

    $official_link = $item->ep_name;

    if ($item->can_broadcast_to_party) {
      $official_link .= '<div class="can-broadcast-to-party">*</div>';
    }

    $official_link .= '<br/><a href="/' . $game . '/user/' .
      $phone_id . '/' . $item->phone_id . '"><em>' . $username . '</em></a>';

    $clan_acronym = '';

    if (!empty($item->clan_acronym)) {
      $clan_acronym = "($item->clan_acronym)";
    }

    if ($item->is_clan_leader) {
      $clan_acronym .= '*';
    }

    $icon = $game . '_clan_' . $item->party_icon . '.png';

    $outcome_reason .=<<< EOF
    <div class="$clan_class">
<div class="clan-icon"><img
  src="/sites/default/files/images/$icon"/></div>
<div class="clan-title">$item->party_title</div>
<div class="opponent-name">$official_link $clan_acronym</div>
<div class="opponent-influence">$item->experience $experience<br/>
  Level $item->level</div>
</div>
EOF;

  }

  $outcome_reason .= '</div></div>';
  return TRUE;
}

function _stlouis_action_ping_function(&$outcome_reason, $target, &$can_do_again) {

  global $game, $phone_id;

  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $data = [];
  $sql = 'SELECT username, experience, initiative, endurance,
    elocution, debates_won, debates_lost, skill_points, luck,
    debates_last_time, users.fkey_values_id, level, phone_id,
    `values`.party_title, `values`.party_icon,
    `values`.name, users.id, users.fkey_neighborhoods_id,
    elected_positions.name as ep_name,
    elected_officials.approval_rating,
    clan_members.is_clan_leader,
    clans.name as clan_name, clans.acronym as clan_acronym,
    clans.rules as clan_rules,
    neighborhoods.name as location

    FROM `users`

    LEFT JOIN `values` ON users.fkey_values_id = `values`.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = users.id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id = users.id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    LEFT JOIN neighborhoods on users.fkey_neighborhoods_id = neighborhoods.id

    where ( users.actions_next_gain > "%s" OR users.energy_next_gain > "%s" )
    and users.fkey_values_id = %d
    and username <> ""
    ORDER by users.experience DESC;';

  $result = db_query($sql, date('Y-m-d', REQUEST_TIME - 1200),
    date('Y-m-d', REQUEST_TIME - 1200), $game_user->fkey_values_id);
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="action-effect">These players are online:
  <div class="elections-header">
    <div class="election-details">
      <div class="clan-title">$politics</div>
      <div class="opponent-name">Name</div>
      <div class="opponent-influence">Stats</div>
    </div>
  </div>
  <div class="elections">
EOF;

  foreach ($data as $item) {
firep($item, 'online players');

    $username = $item->username;
    if (empty($username)) {
      $username = '<em>Anonymous</em>';
    }

    if ($item->id == $game_user->id) {
      $clan_class = 'election-details me';
    }
    else {
      $clan_class = 'election-details';
    }

    $official_link = $item->ep_name;

    if ($item->can_broadcast_to_party) {
      $official_link .= '<div class="can-broadcast-to-party">*</div>';
    }

    $official_link .= '<br><a href="/' . $game . '/user/' .
      $phone_id . '/id:' . $item->id . '"><em>' . $username . '</em></a>';

    $exp = $item->experience;
    $clan_acronym = '';

    if (!empty($item->clan_acronym)) {
      $clan_acronym = "($item->clan_acronym)";
    }

    if ($item->is_clan_leader) {
      $clan_acronym .= '*';
    }

    $icon = $game . '_clan_' . $item->party_icon . '.png';

    $outcome_reason .= <<< EOF
    <div class="$clan_class">
      <div class="clan-icon">
        <img src="/sites/default/files/images/$icon"/>
      </div>
      <div class="clan-title">$item->party_title</div>
      <div class="opponent-name">$official_link $clan_acronym</div>
      <div class="opponent-influence">
        $exp $experience
        <br>
        Level $item->level
      </div>
    </div>
EOF;

  }
?>
  </div>
</div>
<?php
  return TRUE;
}

function _stlouis_action_steal_some_value_function(&$outcome_reason,
  $target, &$can_do_again) {

  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $can_do_again = FALSE;

  game_karma($game_user, "Stole some value!", -5);

  $sql = 'update users set debates_last_time = "%s" where id = %d;';
  db_query($sql, date('Y-m-d H:i:s', REQUEST_TIME), $game_user->id);
  return TRUE;
}

function _stlouis_action_erase_your_wall_function(&$outcome_reason,
  $target, &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';

  $game_user = zg_fetch_user();
  $action_id = arg(3);
  $sure = check_plain($_GET['sure']);

  if ($sure != 'yes') {
    $outcome_reason = '<div class="subtitle">Are you sure?</div>
      <div class="subsubtitle">
        This deletes <strong>all messages</strong> and cannot be undone!
      </div>
      <div class="try-an-election-wrapper">
        <div class="try-an-election">
          <a href="/' . $game . '/actions_do/' .
          $arg2 . '/' . $action_id . '?sure=yes">Yes,  I\'m sure</a>
        </div>
        <div class="try-an-election">
          <a href="/' . $game . '/actions/' . $phone_id .
          '">No, I\'m not sure</a>
        </div>
      </div>';
      return FALSE;
  }

  $sql = 'delete from user_messages where fkey_users_to_id = %d;';
  db_query($sql, $game_user->id);
  return TRUE;
}

  function _stlouis_action_give_luck_to_a_clan_member_function(&$outcome_reason, $target) {

    global $game, $phone_id;
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = _stlouis_fetch_user();
    $action_id = arg(3);
    $target_name = $target->ep_name . ' ' . $target->username;
    $target_id = $_GET['target'];
    $sure = check_plain($_GET['sure']);

    if ((substr($phone_id, 0, 3) == 'sdk') ||
      (strpos($_SERVER['HTTP_USER_AGENT'], 'vm Build/MASTER') !== FALSE) ||
      (strpos($_SERVER['HTTP_USER_AGENT'], 'sdk Build') !== FALSE)) {

      $outcome_reason = '<div class="land-failed">' . t('Sorry!') .
        '</div><div class="action-effect">SDK users cannot give Luck.</div>';

      return FALSE;

    }

    // Not enough luck.
    if ($game_user->luck < 20) {

      $outcome_reason = '<div class="land-failed">' .
        t('Not enough Luck!') .
        '</div><div class="action-effect">You do not have 10 extra Luck to give</div>';

      return FALSE;
    }

    if ($sure != 'yes') {

      $outcome_reason = '<div class="subtitle">Are you sure?</div>
        <div class="subsubtitle">
          This gives 10 of your Luck and cannnot be undone!
        </div>
        <div class="try-an-election-wrapper">
          <div class="try-an-election">
            <a href="/' . $game . '/actions_do/' .
            $phone_id . '/' . $action_id . '?target=' . $target_id .
            '&sure=yes">Yes,  I\'m sure</a>
          </div>
          <div class="try-an-election">
            <a href="/' . $game . '/actions/' . $phone_id .
            '">No, I\'m not sure</a>
          </div>
        </div>';

        return FALSE;

    }

    $sql = 'insert into challenge_history
        (type, fkey_from_users_id, fkey_to_users_id, fkey_neighborhoods_id,
        fkey_elected_positions_id, won, desc_short, desc_long) values
        ("gift", %d, %d, %d, %d, %d, "%s", "%s");';
     $result = db_query($sql, $game_user->id, $target_id,$game_user->fkey_neighborhoods_id,
       $target->ep_id, 0,
       "$game_user->username gave a gift of Luck to " .$target_name. '.',
       "$game_user->username gave a gift of 10 Luck to " . $target_name.
        ' (currently ' . $target->luck . ').');

    $sql = 'update users set luck = luck - 10 where id = %d;';
    $result = db_query($sql, $game_user->id);

    $sql = 'update users set luck = luck + 10 where id = %d;';
    $result = db_query($sql, $target_id);

    $outcome_reason .= '<div class="action-effect">' .
      t('You have transferred 10 of your Luck to @name',
      ['@name' => $target_name]) . '</div>';

    return TRUE;
  }

function _stlouis_action_learn_with_your_tutor_function(&$outcome_reason, $target, &$can_do_again) {

  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  // Fast comps for the next five minutes.
  zg_set_timer($game_user, 'fast_comps_15', 300);
  zg_set_timer($game_user, 'next_major_action', 14400);

  $outcome_reason .= '<div class="action-effect">' .
    t('Your mind becomes more clear as you prepare to learn') . '</div>';

  return TRUE;
}

function _stlouis_action_eat_some_food_function(&$outcome_reason, $target, &$can_do_again) {

  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $sql = 'update users set energy = energy + 30 where id = %d;';
  db_query($sql, $game_user->id);

  // Start the energy clock, if needed.
  if ($game_user->energy == $game_user->energy_max) {
    $sql = 'update users set energy_next_gain = "%s" where id = %d;';
    db_query($sql, date('Y-m-d H:i:s', REQUEST_TIME + 300),
      $game_user->id);
  }

  // Reprocess user object.
  $game_user = zg_fetch_user();

  if ($game_user->energy > $game_user->energy_max) {
    game_competency_gain($game_user, 'satiated');
  }

  $outcome_reason .= '<div class="action-effect">' .
    t('You have eaten and feel more energetic') . '</div>';

  return TRUE;
}

function _stlouis_action_drink_an_energy_drink_function(&$outcome_reason, $target, &$can_do_again) {
  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $sql = 'update users set energy = energy + 500 where id = %d;';
  db_query($sql, $game_user->id);

  // Start the energy clock, if needed.
  if ($game_user->energy == $game_user->energy_max) {
    $sql = 'update users set energy_next_gain = "%s" where id = %d;';
    db_query($sql, date('Y-m-d H:i:s', REQUEST_TIME + 300),
      $game_user->id);
  }
  $outcome_reason .= '<div class="action-effect">' .
    t('You have drunk and feel more energetic') . '</div>';

  $game_user->energy += 500;
  if ($game_user->energy > ($game_user->energy_max * 2)) {
    $outcome_reason .= '<div class="action-effect">
      But your heart is beating too fast!
    </div>
    <div class="action-effect">
      You need to sit down for a few minutes.
    </div>';

    zg_set_timer($game_user, 'next_major_action', 180);
  }
  else {
    zg_set_timer($game_user, 'next_major_action', 30);
  }

  if ($game_user->energy > $game_user->energy_max) {
    game_competency_gain($game_user, 'satiated');
  }

  return TRUE;
}

function _stlouis_action_take_some_meth_function(&$outcome_reason, $target, &$can_do_again) {
  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $outcome_reason .= '<div class="action-effect">' .
    t('Wowzers!') . '</div>';

  if ($game_user->energy < 500) {
    $outcome_reason = '<div class="action-effect">' .
      t('Low Blood Sugar!') .
      '</div><div class="action-effect">You need to sit down for a few minutes.</div>';

    zg_set_timer($game_user, 'next_major_action', 300);
  }
  else {
    zg_set_timer($game_user, 'next_major_action', 60);
  }

  $sql = 'update users set actions = actions + 50, energy = energy - 500 where id = %d;';
  db_query($sql, $game_user->id);

  // Start the actions clock, if needed.
  if ($game_user->actions == $game_user->actions_max) {
    $sql = 'update users set actions_next_gain = "%s" where id = %d;';
    db_query($sql, date('Y-m-d H:i:s', REQUEST_TIME + 180),
      $game_user->id);
  }

  // Start the energy clock, if needed.
  if ($game_user->energy == $game_user->energy_max) {
    $sql = 'update users set energy_next_gain = "%s" where id = %d;';
    db_query($sql, date('Y-m-d H:i:s', REQUEST_TIME + 300),
      $game_user->id);
  }

  return TRUE;
}

function _stlouis_action_throw_eggs_function(&$outcome_reason, $target, &$can_do_again) {

  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $can_do_again = TRUE;

  $target_name = $target->ep_name . ' ' . $target->username;
  $target_id = (int) $_GET['target'];

  // The player egging and the player being egged must be in the same hood.
  if ($game_user->fkey_neighborhoods_id != $target->fkey_neighborhoods_id) {
    $outcome_reason = '<div class="action-effect">' .
      t('Sorry!&nbsp; You are no longer in this neighborhood') . '</div>';
    return FALSE;
  }

  // STL-236 -- no unaffiliated eggings.
  if ($game_user->fkey_values_id == 0) {
    $outcome_reason = '<div class="action-effect">' .
      t('Sorry!&nbsp; You must join a political party first') . '</div>';
    return FALSE;
  }

  $sql = 'insert into challenge_history
    (type, fkey_from_users_id, fkey_to_users_id, fkey_neighborhoods_id,
    fkey_elected_positions_id, won, desc_short, desc_long) values
    ("egging", %d, %d, %d, %d, %d, "%s", "%s");';
  db_query($sql, $game_user->id, $target_id,
    $game_user->fkey_neighborhoods_id, 0, 0,
    "$game_user->username egged $target_name.",
    "$game_user->username egged $target_name.");

  $outcome_reason .= '<div class="action-effect">' .
    t('What a smell!') . '</div>';
  return TRUE;
}

function _stlouis_action_meet_someone_new_function(&$outcome_reason,
  $target, &$can_do_again) {

  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  // Both players must be in the same hood.
  if ($game_user->fkey_neighborhoods_id != $target->fkey_neighborhoods_id) {
    $outcome_reason .= '<div class="action-effect">' .
      t('Sorry!&nbsp; You two are no longer in the same @hood',
      ['@hood' => $hood_lower]) . '</div>';
    return FALSE;
  }

  return TRUE;
}

function _stlouis_action_spread_gossip_function(&$outcome_reason,
  $target, &$can_do_again, &$action) {

  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $target_name = $target->ep_name . ' ' . $target->username;
  $target_id = check_plain($_GET['target']) + 0;

  // Been booted?  Fail the gossip.
  if ($game_user->fkey_neighborhoods_id != $target->fkey_neighborhoods_id) {
    $outcome_reason .= '<div class="action-effect">' .
      t('Sorry!&nbsp; You are no longer in this neighborhood') . '</div>';
    return FALSE;
  }

  $sql = 'insert into challenge_history
    (type, fkey_from_users_id, fkey_to_users_id, fkey_neighborhoods_id,
    fkey_elected_positions_id, won, desc_short, desc_long) values
    ("gossip", %d, %d, %d, %d, %d, "%s", "%s");';
  db_query($sql, $game_user->id, $target_id,
    $game_user->fkey_neighborhoods_id, 0, 0,
    "$game_user->username gossiped about $target_name.",
    "$game_user->username gossiped about $target_name.");

  $outcome_reason .= '<div class="action-effect">' .
    t('You wouldn\'t believe what I\'ve heard about ') . $target_name . '</div>';
  return TRUE;
}

function _stlouis_action_plant_flower_seeds_function(&$outcome_reason, $target, &$can_do_again) {
  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  // No unaffiliated plantings.
  if ($game_user->fkey_values_id == 0) {
    $outcome_reason .= '<div class="action-effect">' .
      t('Sorry!&nbsp; You must join a political party first')
      . '</div>';
    return FALSE;
  }

  $sql = 'insert into challenge_history
    (type, fkey_from_users_id, fkey_to_users_id, fkey_neighborhoods_id,
    fkey_elected_positions_id, won, desc_short, desc_long) values
    ("planting", %d, %d, %d, %d, %d, "%s", "%s");';
  db_query($sql, $game_user->id, $game_user->id,
    $game_user->fkey_neighborhoods_id, 0, 0,
    "$game_user->username planted.",
    "$game_user->username planted.");

  $outcome_reason .= '<div class="action-effect">' .
    t('Isn\'t it pretty?') . '</div>';
  return TRUE;
}

function _stlouis_action_give_to_a_clan_member_function(&$outcome_reason, $target, &$can_do_again) {

  global $game, $phone_id, $action;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  $target_name = $target->ep_name . ' ' . $target->username;
  $target_id = (int) $_GET['target'];

  if ((substr($phone_id, 0, 3) == 'sdk') ||
    zg_get_value($game_user, 'sdk') == 1) {
    $outcome_reason = '<div class="land-failed">' . t('Sorry!') .
      '</div><div class="action-effect">SDK users cannot give Actions.</div>';
    return FALSE;
  }

  // Make the target user's actions current.
  $sql = 'select actions, actions_max, actions_next_gain from users
    where id = %d;';
  $result = db_query($sql, $target_id);
  $item = db_fetch_object($result);

  $actions_next_gain = strtotime($item->actions_next_gain);
  $secs_until = $actions_next_gain - REQUEST_TIME;

  // Make actions current.  If this didn't happen, you could give actions to a
  // user that would be swallowed up by time if s/he was low on actions and not
  // currently playing.
//    $text = 'User ' . $game_user->username . ' is sending actions to ' .
//      $target_name . ' (currently ' . $item->actions . ' of ' .
//      $item->actions_max . ' with a next_gain time of ' .
//      $item->actions_next_gain . ').';

  // Add actions if low.
  while (($item->actions < $item->actions_max) && ($secs_until <= 0)) {
    $item->actions++;
    $actions_next_gain += 180;
    $secs_until += 180;
  }

  // Deduct actions if high.
  while (($item->actions > $item->actions_max) && ($secs_until <= 0)) {
    $item->actions--;
    $actions_next_gain += 180;
    $secs_until += 180;
  }

  // Now current with actions?  Bring the date current too.
  if ($item->actions == $item->actions_max) {
    $actions_next_gain = REQUEST_TIME;
  }

  // Save in db.
  $item->actions_next_gain = date('Y-m-d H:i:s', $actions_next_gain);
  $sql = 'update users set actions = %d, actions_next_gain = "%s"
    where id = %d;';
  db_query($sql, $item->actions, $item->actions_next_gain, $target_id);

  // Too many actions already?  Fail.
  if ($item->actions >= $item->actions_max * 50) {
    $outcome_reason = '<div class="land-failed">' . t('Thanks for Sharing!') .
      '</div><div class="action-effect">... but ' . $target_name .
      ' has plenty of actions already.</div>';
    return FALSE;
  }

  // Now save the record of what happened.
  $sql = 'insert into challenge_history
    (type, fkey_from_users_id, fkey_to_users_id, fkey_neighborhoods_id,
    fkey_elected_positions_id, won, desc_short, desc_long) values
    ("gift", %d, %d, %d, %d, %d, "%s", "%s");';
  $result = db_query($sql, $game_user->id, $target_id,
    $game_user->fkey_neighborhoods_id, 0, 0,
    "$game_user->username gave Actions to $target_name.",
    "$game_user->username gave a gift of $action->actions_change Actions " .
    "points to $target_name (currently $item->actions).");

  return TRUE;
}

function _stlouis_action_check_for_planting_function(&$outcome_reason, $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_from_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_from_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where challenge_history.fkey_neighborhoods_id = %d 
    and challenge_history.type = "planting"
    AND challenge_history.timestamp >= "%s"

    order by challenge_history.timestamp DESC;';

  $result = db_query($sql, $game_user->fkey_neighborhoods_id,
    date('Y-m-d H:i:s', REQUEST_TIME - 86400));
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="news">
<div class="messages-title">
  Flowers that have been planted in this neighborhood
</div>
EOF;

  foreach ($data as $item) {
    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym)) {
      $clan_acronym = "($item->clan_acronym)";
    }

    if ($item->is_clan_leader) {
      $clan_acronym .= '*';
    }

    $outcome_reason .=<<< EOF
<div class="dateline">
$display_time from $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
<p>$item->desc_short</p>
<div class="message-reply-wrapper"><div class="message-reply">
  <a href="/$game/user/$phone_id/$item->phone_id">View</a>
</div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) {
    $outcome_reason .= 'No flowers found!';
  }

  $outcome_reason .= '</div>';
  return TRUE;
}

function _stlouis_action_check_for_vandalism_function(&$outcome_reason, $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_from_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_from_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where fkey_to_users_id = %d and challenge_history.type = "egging"
    AND challenge_history.timestamp >= "%s"

    order by challenge_history.timestamp DESC;';

  $result = db_query($sql, $game_user->id, date('Y-m-d H:i:s', REQUEST_TIME - 86400));
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="news">
<div class="messages-title">
  Eggs that have been thrown at your office
</div>
EOF;

  foreach ($data as $item) {
    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym)) {
      $clan_acronym = "($item->clan_acronym)";
    }

    if ($item->is_clan_leader) {
      $clan_acronym .= '*';
    }

    $outcome_reason .=<<< EOF
<div class="dateline">
$display_time from $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
<p>$item->desc_short</p>
<div class="message-reply-wrapper"><div class="message-reply">
  <a href="/$game/user/$phone_id/$item->phone_id">View</a>
</div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) {
    $outcome_reason .= 'No eggings found!';
  }

  $outcome_reason .= '</div>';
  return TRUE;
}

function _stlouis_action_critique_last_debates_function(&$outcome_reason, $target, &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_from_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_from_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where (fkey_from_users_id = %d OR fkey_to_users_id = %d)
    and challenge_history.type = "debate"
    order by challenge_history.timestamp DESC
    limit 3;';

  $result = db_query($sql, $game_user->id);
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="news">
<div class="messages-title">
  Latest debate(s)
</div>
EOF;

  foreach ($data as $item) {

    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym))
      $clan_acronym = "($item->clan_acronym)";

    if ($item->is_clan_leader)
      $clan_acronym .= '*';

    $outcome_reason .=<<< EOF
<div class="dateline">
$display_time from $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
<p>$item->desc_short</p>
<p>$item->desc_long</p>
<div class="message-reply-wrapper"><div class="message-reply">
  <a href="/$game/user/$phone_id/$item->phone_id">View</a>
</div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) {
    $outcome_reason .= 'No debates found!';
  }

  $outcome_reason .= '</div>';
  return TRUE;
}

function _stlouis_action_listen_for_rumors_function(&$outcome_reason, $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
      elected_positions.name as ep_name,
      clan_members.is_clan_leader,
      clans.acronym as clan_acronym

      from challenge_history

      left join users on challenge_history.fkey_from_users_id = users.id

      LEFT OUTER JOIN elected_officials
      ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

      LEFT OUTER JOIN elected_positions
      ON elected_positions.id = elected_officials.fkey_elected_positions_id

      LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
      challenge_history.fkey_from_users_id

      LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

      where fkey_to_users_id = %d and challenge_history.type = "gossip"
      and challenge_history.timestamp >= "%s"
      order by challenge_history.timestamp DESC;';

  $result = db_query($sql, $game_user->id, date('Y-m-d H:i:s',
    REQUEST_TIME - 86400));
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="news">
  <div class="messages-title">
    Rumors around town
  </div>
EOF;

  foreach ($data as $item) {

    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym))
      $clan_acronym = "($item->clan_acronym)";

    if ($item->is_clan_leader)
      $clan_acronym .= '*';

    $outcome_reason .=<<< EOF
<div class="dateline">
  $display_time from $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
  <p>$item->desc_short</p>
  <div class="message-reply-wrapper"><div class="message-reply">
    <a href="/$game/user/$phone_id/$item->phone_id">View</a>
  </div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) $outcome_reason .= 'No rumors found!';

  $outcome_reason .= '</div>';
  return TRUE;
}

function _stlouis_action_count_your_benefactors_function(&$outcome_reason,
  $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_from_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_from_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where fkey_to_users_id = %d and challenge_history.type = "gift" and
    challenge_history.timestamp >= "%s"
    order by timestamp DESC;';

  $result = db_query($sql, $game_user->id,
    date('Y-m-d H:i:s', REQUEST_TIME - 86400));
  while ($item = db_fetch_object($result)) $data[] = $item;

  $outcome_reason .=<<< EOF
<div class="news">
  <div class="messages-title">
    List of Benefactors
  </div>
EOF;

  foreach ($data as $item) {

    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym))
      $clan_acronym = "($item->clan_acronym)";

    if ($item->is_clan_leader)
      $clan_acronym .= '*';

    $outcome_reason .=<<< EOF
<div class="dateline">
  $display_time from $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
  <p>$item->desc_short</p>
  <div class="message-reply-wrapper"><div class="message-reply">
    <a href="/$game/user/$phone_id/$item->phone_id">View</a>
  </div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) {
    $outcome_reason .= 'No benefactors found!';
  }

  $outcome_reason .= '</div>';
  return TRUE;
}

function _stlouis_action_check_security_cameras_function(&$outcome_reason, $target) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $action_id = $arg3;
  $msg_shown = FALSE;

  if (!_stlouis_check_for_friendly_hood()) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not in a friendly @hood!',
        ['@hood' => $hood_lower]) .
      '</div><div class="action-effect">You must be in friendly territory to
        perform this action.</div>';
    return FALSE;
  }

  $hour_to_show = 0 + (int) check_plain($_GET['hour']);
  $sql = 'select quantity from equipment_ownership
    where fkey_users_id = %d and fkey_equipment_id = 42;';
  $result = db_query($sql, $game_user->id);
  $num_cameras = db_fetch_object($result);

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_from_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_from_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where challenge_history.fkey_neighborhoods_id = %d
    and challenge_history.timestamp >= "%s"
    and challenge_history.timestamp <= "%s"
    order by challenge_history.timestamp DESC;';

  $result = db_query($sql, $game_user->fkey_neighborhoods_id,
    date('Y-m-d H:i:s', REQUEST_TIME - ($hour_to_show * 3600) - 3600),
    date('Y-m-d H:i:s', REQUEST_TIME - ($hour_to_show * 3600)));
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $item->desc_short = 'end';

  // Hack to force last item to show.
  $data[] = $item;

  if ($hour_to_show == 1) {
    $hours = 'hour';
  }
  else {
    $hours = 'hours';
  }

  // Previous hour.
  if ($hour_to_show > 0) {
    $previous_hour = $hour_to_show - 1;

    if ($previous_hour == 1) {
      $prev_hours = 'hour';
    }
    else {
      $prev_hours = 'hours';
    }

    $outcome_reason .=<<< EOF
<div class="try-an-election-wrapper">
  <div class="try-an-election">
    <a href="/$game/actions_do/$arg2/$action_id?hour=$previous_hour">&lt;&lt;&lt;
      See $previous_hour $prev_hours ago</a>
  </div>
</div>
EOF;
  }
  else {
    $outcome_reason .=<<< EOF
<div class="try-an-election-wrapper">
  <div class="try-an-election not-yet">
    &lt;&lt;&lt; No more hours to view
  </div>
</div>
EOF;
  }

  // Next hour.
  if ($hour_to_show < ($num_cameras->quantity - 1)) {
    $next_hour = $hour_to_show + 1;

    if ($next_hour == 1) {
      $next_hours = 'hour';
    }
    else {
      $next_hours = 'hours';
    }

    $outcome_reason .=<<< EOF
<div class="try-an-election-wrapper">
  <div class="try-an-election">
    <a href="/$game/actions_do/$arg2/$action_id?hour=$next_hour">See
      $next_hour $next_hours ago &gt;&gt;&gt;</a>
  </div>
</div>
EOF;
  }
  else {
    $outcome_reason .=<<< EOF
<div class="try-an-election-wrapper">
  <div class="try-an-election not-yet">
    No more security cameras &gt;&gt;&gt;
  </div>
</div>
EOF;
  }

  $outcome_reason .=<<< EOF
<div class="news">
  <div class="messages-title">
    Actions $hour_to_show $hours ago in your {$hood_lower}
  </div>
EOF;

  unset($old_item);
  $instance_count = 1;

  foreach ($data as $item) {
    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym))
      $clan_acronym = "($item->clan_acronym)";

    if ($item->is_clan_leader)
      $clan_acronym .= '*';

    if ($item->desc_short !== $old_item->desc_short) {

      // New item to display... show it and reset counters.
      // Anything to display?
      if ($old_item) {

        if ($instance_count > 1) {
          $instance_text = "($instance_count times) ";
          $time_prefix = 'Starting ';
        }
        else {
          $instance_text = $time_prefix = '';
        }
       $msg_shown = TRUE;

       $outcome_reason .=<<< EOF
  <div class="dateline">
    $time_prefix $old_display_time from $old_item->ep_name $old_item->username $old_clan_acronym
  </div>
  <div class="message-body">
    <p>$instance_text $old_item->desc_short</p>
    <div class="message-reply-wrapper"><div class="message-reply">
      <a href="/$game/user/$arg2/$old_item->phone_id">View</a>
    </div>
  </div>
</div>
EOF;
      }

      // Now display current item.
      //        $outcome_reason .=<<< EOF
      //<div class="dateline">
      //  $display_time from $item->ep_name $item->username $clan_acronym
      //</div>
      //<div class="message-body">
      //  <p>($item->id) $item->desc_short</p>
      //  <div class="message-reply-wrapper"><div class="message-reply">
      //    <a href="/$game/user/$phone_id/$item->phone_id">View</a>
      //  </div></div>
      //</div>
      //EOF;

      $instance_count = 1;
      $old_item = $item;
      $old_clan_acronym = $clan_acronym;
      $old_display_time = $display_time;

    }
    else {
      // Dup of existing item... abbreviate.
      $instance_count++;
    }

  }

  if (!$msg_shown) {
    $outcome_reason .= 'Nothing found!';
  }

  $outcome_reason .= '</div>';

  return TRUE;
}

function _stlouis_action_expel_a_party_member_function(&$outcome_reason,
  $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $action_id = $arg3;
  $sure = check_plain($_GET['sure']);
  $target_id = $_GET['target'];

  if ($sure != 'yes') {
    $outcome_reason = '<div class="subtitle">Are you sure?</div>
      <div class="subsubtitle">
        This expels level <strong>' . $target->level .
        '</strong> <strong>' . $target->username .
        '</strong> and cannot be undone!
      </div>
      <div class="try-an-election-wrapper">
        <div class="try-an-election">
          <a href="/' . $game . '/actions_do/' .
          $arg2 . '/' . $action_id . '?target=' . $target_id .
          '&sure=yes">Yes, I\'m sure</a>
        </div>
        <div class="try-an-election">
          <a href="/' . $game . '/actions/' . $arg2 .
          '">No, I\'m not sure</a>
        </div>
      </div>';
    return FALSE;
  }

  $game_user = zg_fetch_user();

  $sql = 'select * from users where id = %d;';
  $result = db_query($sql, $target_id);
  $target_user = db_fetch_object($result);
  $actions_required = $target_user->level;

  // User is already expelled.
  if ($target_user->fkey_values_id == 0) {
    $outcome_reason = '<div class="land-failed">' .
      t('Already expelled!') .
      '</div><div class="action-effect">You can\'t expel someone who has
        already been expelled.</div>';
    return FALSE;
  }

  // Not enough actions.
  if ($game_user->actions < $actions_required) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not enough Action!') .
      '</div><div class="action-effect">You do not have enough Action to
        expel this Level ' . $target_user->level . ' player.</div>';
    $outcome_reason .= '<div class="try-an-election-wrapper"><div
      class="try-an-election"><a href="/' . $game . '/elders_do_fill/' .
      $phone_id . '/action?destination=/' .  $game . '/actions/' . $phone_id .
      '">Refill your Action (1&nbsp;Luck)</a></div></div>';
    return FALSE;
  }

  // Expel succeeds!  Save as major action.
  $sql = 'SELECT elected_positions.name as ep_name,
    elected_positions.type as ep_type
    FROM `users`

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = users.id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    WHERE users.id = %d';

  $result = db_query($sql, $game_user->id);
  $data = db_fetch_object($result);
  $ep_name = $data->ep_name;

  zg_set_timer($game_user, 'next_major_action', 7200);

  $sql = "select party_title from `values` where id = '%d';";
  $result = db_query($sql, $game_user->fkey_values_id);
  $data = db_fetch_object($result);

  $party = ($game == 'stlouis') ? 'party' : 'family';

  // Add message to user.
  $sql = 'insert into user_messages (fkey_users_from_id,
    fkey_users_to_id, message) values (%d, %d, "%s");';
  $message = $ep_name . ' ' . $game_user->username .
  ' has expelled you from the ' .
  $data->party_title . ' ' . $party . '. &nbsp; You have been stripped
    of 10% of your ' . $game_text['experience'] . ' and of your aides.';
  $result = db_query($sql, $game_user->id, $target_id, $message);

  // Update aides.
  $sql = 'update equipment_ownership
    set quantity = ceil(quantity * 0.9), quantity_used = ceil(quantity_used * 0.9)
    where fkey_users_id = %d;';
  db_query($sql, $target_id);

  $sql = 'update land_ownership
    set quantity = ceil(quantity * 0.9) where fkey_users_id = %d;';
  db_query($sql, $target_id);

  $sql = 'update staff_ownership
    set quantity = ceil(quantity * 0.9) where fkey_users_id = %d;';
  db_query($sql, $target_id);

  // Update levels, skill points.
  $new_experience = ceil($target_user->experience * 0.9);

  $sql = 'SELECT max(level) as new_level from levels where experience <= %d;';
  $result = db_query($sql, $new_experience);
  $item = db_fetch_object($result);
  $new_level = $item->new_level;

  $sql = 'SELECT count(quests.id) as bonus FROM `quest_group_completion`
    left outer join quests
    on quest_group_completion.fkey_quest_groups_id = quests.group
    WHERE fkey_users_id = %d and quests.active = 1;';
  $result = db_query($sql, $target_id);

  // Limited to 1 in db.
  $item = db_fetch_object($result);
  $new_skill_points = ($new_level * 4) + $item->bonus - 20;

  $values = ($game == 'stlouis') ? 'Greenbacks' : 'No Values';

  // Update his/her user entry.
  $sql = 'update users set fkey_values_id = 0,
    `values` = "%s", level = %d, experience = %d, energy_max = 200,
    skill_points = %d, initiative = 1, endurance = 1, actions = 3,
    actions_max = 3, elocution = 1
    where id = %d;';
  db_query($sql, $values, $new_level, $new_experience,
    $new_skill_points, $target_id);

  // Also delete any offices s/he held.
  $sql = 'delete from elected_officials where fkey_users_id = %d;';
  db_query($sql, $target_id);

  // And any clan memberships s/he had (disband the clan if s/he was the leader).
  $sql = 'select * from clan_members where fkey_users_id = %d;';
  $result = db_query($sql, $target_id);
  $item = db_fetch_object($result);

  // Clan leader? Delete entire clan.
  if ($item->is_clan_leader) {
    $sql = 'delete from clan_messages where fkey_neighborhoods_id = %d;';
    db_query($sql, $item->fkey_clans_id);
    $sql = 'delete from clan_members where fkey_clans_id = %d;';
    db_query($sql, $item->id);
    $sql = 'delete from clans where id = %d;';
    db_query($sql, $item->id);
  }
  else {
    $sql = 'delete from clan_members where fkey_users_id = %d;';
    db_query($sql, $target_id);
  }

  // Update his/her income.
  game_recalc_income($target_user);

  // Deduct your Action.
  game_action_use($game_user, $actions_required);

  $outcome_reason .= '<div class="action-effect">' . $target_user->username .
    ' has been expelled from your ' . $party . '.</div>';

  $can_do_again = FALSE;
  return TRUE;
}

function _stlouis_action_count_your_votes_function(&$outcome_reason, $target,
  &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;
  $can_do_again = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_to_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_to_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_to_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where fkey_from_users_id = %d and challenge_history.type = "election"
    order by timestamp DESC limit 1;';

  $result = db_query($sql, $game_user->id, date('Y-m-d H:i:s', REQUEST_TIME - 86400));
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="news">
<div class="messages-title">
  Detailed Election Results
</div>
EOF;

  foreach ($data as $item) {

    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym))
      $clan_acronym = "($item->clan_acronym)";

    if ($item->is_clan_leader)
      $clan_acronym .= '*';

    $desc_short = nl2br($item->desc_short);
    $desc_long = nl2br($item->desc_long);

    $outcome_reason .=<<< EOF
<div class="dateline">
$display_time to $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
<p>$desc_short</p>
<p>$desc_long</p>
<div class="message-reply-wrapper"><div class="message-reply">
  <a href="/$game/user/$phone_id/$item->phone_id">View $item->ep_name
    $item->username $clan_acronym</a>
</div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) {
    $outcome_reason .= 'No challenges found!';
  }

  $outcome_reason .= '</div>';

  return TRUE;
}

function _stlouis_action_get_challenge_results_function(&$outcome_reason, $target,
  &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $msg_shown = FALSE;
  $can_do_again = FALSE;

  $data = [];
  $sql = 'SELECT challenge_history.*, users.phone_id, users.username,
    elected_positions.name as ep_name,
    clan_members.is_clan_leader,
    clans.acronym as clan_acronym

    from challenge_history

    left join users on challenge_history.fkey_from_users_id = users.id

    LEFT OUTER JOIN elected_officials
    ON elected_officials.fkey_users_id = challenge_history.fkey_from_users_id

    LEFT OUTER JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id

    LEFT OUTER JOIN clan_members on clan_members.fkey_users_id =
    challenge_history.fkey_from_users_id

    LEFT OUTER JOIN clans on clan_members.fkey_clans_id = clans.id

    where fkey_to_users_id = %d and challenge_history.type = "election"
    order by timestamp DESC limit 5;';

  $result = db_query($sql, $game_user->id, date('Y-m-d H:i:s', REQUEST_TIME - 86400));
  while ($item = db_fetch_object($result)) {
    $data[] = $item;
  }

  $outcome_reason .=<<< EOF
<div class="news">
<div class="messages-title">
  Detailed Election Results
</div>
EOF;

  foreach ($data as $item) {

    $display_time = game_format_date(strtotime($item->timestamp));
    $clan_acronym = '';

    if (!empty($item->clan_acronym)) {
      $clan_acronym = "($item->clan_acronym)";
    }

    if ($item->is_clan_leader) {
      $clan_acronym .= '*';
    }

    $desc_short = nl2br($item->desc_short);
    $desc_long = nl2br($item->desc_long);

    $outcome_reason .=<<< EOF
<div class="dateline">
$display_time from $item->ep_name $item->username $clan_acronym
</div>
<div class="message-body">
<!--<p>$desc_short</p>-->
<p>$desc_long</p>
<div class="message-reply-wrapper"><div class="message-reply">
  <a href="/$game/user/$phone_id/$item->phone_id">View $item->ep_name
    $item->username $clan_acronym</a>
</div></div>
</div>
EOF;

    $msg_shown = TRUE;
  }

  if (!$msg_shown) {
    $outcome_reason .= 'No elections found!';
  }

  $outcome_reason .= '</div>';
  return TRUE;
}

function _stlouis_check_for_friendly_hood() {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();

  if ($game_user->meta == 'admin') {
    return TRUE;
  }

  $sql = 'SELECT fkey_values_id from elected_officials
    left join users on elected_officials.fkey_users_id = users.id
    where users.fkey_neighborhoods_id = %d
    and elected_officials.fkey_elected_positions_id = 1;';
  $result = db_query($sql, $game_user->fkey_neighborhoods_id);
  $item = db_fetch_object($result);

  return ($item->fkey_values_id == $game_user->fkey_values_id);
}

function _stlouis_action_clear_clan_announcements_function(&$outcome_reason, $target,
  &$can_do_again) {

  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';

  $game_user = zg_fetch_user();
  $action_id = arg(3);
  $sure = check_plain($_GET['sure']);

  $sql = 'SELECT id FROM {clan_members} c
  WHERE c.fkey_users_id = %d AND c.fkey_clans_id = %d AND c.is_clan_leader = 1';
  $is_clan_leader = db_result(db_query($sql, (int)$game_user->id, (int)$game_user->fkey_clans_id));

  if (empty($is_clan_leader)) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not clan leader!') .
      '</div><div class="action-effect">You are not the clan leader.&nbsp;
      You cannot perform this action.</div>';
    return FALSE;
  }

  if ($sure != 'yes') {
    $outcome_reason = '<div class="subtitle">Are you sure?</div>
      <div class="subsubtitle">
        This deletes <strong>all announcements</strong> and cannot be undone!
      </div>
      <div class="try-an-election-wrapper">
        <div class="try-an-election">
          <a href="/' . $game . '/actions_do/' .
          $arg2 . '/' . $action_id . '?sure=yes">Yes,  I\'m sure</a>
        </div>
        <div class="try-an-election">
          <a href="/' . $game . '/actions/' . $phone_id .
          '">No, I\'m not sure</a>
        </div>
      </div>';
      return FALSE;
  }

  $sql = 'DELETE FROM clan_messages WHERE fkey_neighborhoods_id = %d AND is_announcement = 1';
  $result = db_query($sql, (int)$game_user->fkey_clans_id);
  return !empty($result) ? TRUE : FALSE;
}

function _stlouis_action_support_your_local_official_function(&$outcome_reason,
  $target, &$can_do_again) {
  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $target_id = (int) $_GET['target'];

  $sql = 'SELECT elected_officials.id
      FROM elected_officials
      LEFT JOIN users ON elected_officials.fkey_users_id = users.id
      LEFT JOIN elected_positions
      ON elected_positions.id = elected_officials.fkey_elected_positions_id
      WHERE users.fkey_neighborhoods_id = %d
      AND elected_positions.type = 1
      AND users.id = %d';
  $result = db_query($sql, $game_user->fkey_neighborhoods_id, $target_id);
  $item = db_fetch_object($result);

  if ($item) {
    game_competency_gain($target, 'trustworthy');
    return TRUE;
  }
  else {
    $outcome_reason = '<div class="land-failed">' .
      t('Target is not a local official!') .
      '</div>';
    game_karma($game_user, "Target {$target->username} is not a local official", -20);
    return FALSE;
  }
}

function _stlouis_action_support_your_party_official_function(
  &$outcome_reason, $target, &$can_do_again) {
  global $game;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $game_user = zg_fetch_user();
  $target_id = (int) $_GET['target'];

  $sql = 'SELECT elected_officials.id
    FROM elected_officials
    LEFT JOIN users ON elected_officials.fkey_users_id = users.id
    LEFT JOIN elected_positions
    ON elected_positions.id = elected_officials.fkey_elected_positions_id
    WHERE users.fkey_values_id = %d
    AND elected_positions.type = 2
    AND users.id = %d';
  $result = db_query($sql, $game_user->fkey_values_id, $target_id);
  $item = db_fetch_object($result);

  if ($item) {
    game_competency_gain($target, 'trustworthy');
    return TRUE;
  }
  else {
    $outcome_reason = '<div class="land-failed">' .
      t('Target is not a party official!') .
      '</div>';
    game_karma($game_user, "Target {$target->username} is not a party official", -20);
    return FALSE;
  }
}

function _stlouis_action_check_st_louis_time_function(&$outcome_reason,
  $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';

  // One hour ago, since we are ET.
  $st_time = date('g:i:s A', REQUEST_TIME - 3600);
  $outcome_reason .= '<div class="title">Current Time in St. Louis</div>
    <div class="subtitle">' . $st_time . '</div>';

  return TRUE;
}

function _stlouis_action_evacuate_forest_park_function(&$outcome_reason,
  $target, &$can_do_again) {
  global $game, $phone_id;
  include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
  $action_id = $arg3;
  $sure = check_plain($_GET['sure']);

  if ($sure != 'yes') {
    $sql = 'select count(*) as count from users
      where fkey_neighborhoods_id = 81;';
    $result = db_query($sql);
    $count = db_fetch_object($result);

    $outcome_reason = '<div class="subtitle">Are you sure?</div>
      <div class="subsubtitle">
        This action clears Forest Park of all <strong>' . $count->count .
      '</strong> players and cannot be undone!
      </div>
      <div class="try-an-election-wrapper">
        <div class="try-an-election">
          <a href="/' . $game . '/actions_do/' .
      $arg2 . '/' . $action_id . '?sure=yes">Yes, I\'m sure</a>
        </div>
        <div class="try-an-election">
          <a href="/' . $game . '/actions/' . $arg2 .
      '">No, I\'m not sure</a>
        </div>
      </div>';
    return FALSE;
  }

  $game_user = zg_fetch_user();

  $sql = 'select users.*, `values`.fkey_neighborhoods_id as home_hood from users
    left join `values` on users.fkey_values_id = `values`.id
  where users.fkey_neighborhoods_id = 81;';
  $result = db_query($sql);
  $target_users = [];
  while ($item = db_fetch_object($result)) {
    if ($item->home_hood == 81) {
      $item->home_hood = 39;
      $item->hood_text = 'sent to a random ';
    }
    else {
      $item->hood_text = 'returned to your home ';
    }
    $target_users[] = $item;
  }
  $num_users = count($target_users);
  $actions_required = $num_users;
  $money_required = $num_users * 50;

  // Not enough actions.
  if ($game_user->actions < $actions_required) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not enough Action!') .
      '</div><div class="action-effect">You do not have enough Action to
        expel these ' . $num_users . ' players.</div>';
    $outcome_reason .= '<div class="try-an-election-wrapper"><div
      class="try-an-election"><a href="/' . $game . '/elders_do_fill/' .
      $phone_id . '/action?destination=/' .  $game . '/actions/' . $arg2 .
      '">Refill your Action (1&nbsp;Luck)</a></div></div>';
    return FALSE;
  }

  // Not enough money.
  if ($game_user->money < $money_required) {
    $outcome_reason = '<div class="land-failed">' .
      t('Not enough @value!', ['@value' => $game_user->values]) .
      '</div><div class="action-effect">You do not have enough ' . $game_user->values .
      ' to expel these ' . $num_users . ' players.</div>'.
      zg_luck_money_render_button($game_user, "$game/actions/$arg2");
    return FALSE;
  }

  // Closing succeeds!
  // Send a system-wide message.
  $msg = $game_user->ep_name . ' ' . $game_user->username . ' has closed Forest Park.
    All people there have been sent to their home ' . $game_text['hood'] . 's.';
  game_send_system_message($game_user->id, $msg, 'mayor');

  // Move users, tell them.
  $sql = 'update users set fkey_neighborhoods_id = %d where id = %d;';
  $msg = $game_user->ep_name . ' ' . $game_user->username . ' has closed Forest Park.
    You have been ';
  foreach ($target_users as $target) {
    db_query($sql, $target->home_hood, $target->id);
    game_send_user_message($game_user->id, $target->id, 0,
      $msg . $target->hood_text . $game_text['hood'] . '.', 'png');
  }

  // Save as major action.
  zg_set_timer($game_user, 'next_major_action', 900);

  // Deduct your Action, money.
  $sql = 'update users set money = money - %d where id = %d;';
  db_query($sql, $money_required, $game_user->id);
  $game_user->money -= $money_required;
  game_action_use($game_user, $actions_required);

  $outcome_reason .= '<div class="action-effect">Cleared ' . $count->count .
    ' players from Forest Park.</div>';

  $can_do_again = FALSE;
  return TRUE;
}

  function _stlouis_action_don_a_different_costume_function(&$outcome_reason,
    $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
/*
    $sql = 'update users set username =
      concat(elt(floor (rand() * 13) + 1,
      "Happy", "Scary", "Funny", "Undead", "Rainbow", "Hero", "Gothic",
      "Frightening", "Sexy", "Fierce", "Skinny", "Elderly", "Plump"),
      elt(floor (rand() * 28) + 1,
      "Elf", "Ghost", "Witch", "Pirate", "Zombie", "Princess", "Monster",
      "Fairy", "Werewolf", "Pumpkin", "Spider", "Wrestler",  "Dictator",
      "Vampire", "Cowboy", "Cowgirl", "Gypsy", "King", "Queen", "Alien",
      "Bee", "Devil", "Elvis", "Baby", "Man", "Woman", "Lizard", "Dinosaur"),
      floor(rand() * 9999))
      where id = %d';
    $result = db_query($sql, $game_user->id);

    $game_user = zg_fetch_user();
*/
    $outcome_reason = '<div class="title">Halloween is over!</div>';

    return FALSE;

  }


  function _stlouis_action_remove_your_costume_function(&$outcome_reason,
    $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
    $old_username = $game_user->username;
    $can_do_again = FALSE;

    $sql = 'update users set username = real_username
      where id = %d';
    $result = db_query($sql, $game_user->id);

    $game_user = zg_fetch_user();
    $new_username = $game_user->username;

    if ($old_username != $new_username) {

      $outcome_reason .= '<div class="subtitle">You are now known as</div>
        <div class="title">' . $game_user->username . '</div>';

      return TRUE;

    }
    else {

      switch(mt_rand(0, 1)) {

        case 0:
          $outcome_reason = '<div class="title">Sadly</div>
            <div class="subtitle">You are not wearing a costume :-(((</div>';
        break;

        case 1:
          $outcome_reason = '<div class="title">What?</div>
            <div class="subtitle">You want to go around naked???</div>';
        break;

      }

      return FALSE;

    }

  }


  function _stlouis_action_trick_or_treat_function(&$outcome_reason,
    $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
    $old_username = $game_user->username;
//    $can_do_again = FALSE;

    // No costume!
    if ($game_user->username == $game_user->real_username) {

      $outcome_reason = '<div class="title">Huh?</div>
        <div class="subtitle">You can\'t go out without a costume!</div>';
      return FALSE;

    }

    $sql = 'select name, special_int from neighborhoods where id = %d;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id);
    $item = db_fetch_object($result); // limited to 1 in db;

    // Out of candy.
    if ($item->special_int < 1) {

      $outcome_reason = '<div class="title">' . $item->name . '</div>
        <div class="subtitle">is out of treats -- try another neighborhood</div>';

      $sql = 'select count(name) as count
        from neighborhoods where special_int < 1;';
      $result = db_query($sql);
      $item2 = db_fetch_object($result); // limited to 1 in db;

//      mail('joseph@cheek.com', $item2->count . ' neighborhoods out of treats',
//        'hopefully ' . $item->name . ' will get more soon!');

      return FALSE;

    }

    $candy_used = FALSE;

    switch(mt_rand(0, 90)) {

      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        $outcome_reason = '<div class="title"><img
          src="/sites/default/files/images/stlouis-angry-dog.png"></div>
          <div class="title">BARK BARK BARK!</div>
          <div class="subtitle">A scary dog chases you away</div>';

        return TRUE;

        // Just for form.
        break;

      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
        $outcome_reason = '<div class="title">Sadly</div>
          <div class="subtitle">No one is home 8-(</div>';

        return TRUE;

        // Just for form.
        break;

      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
        $outcome_reason .=
          '<div class="title">You get your actions refilled!</div>';

        $sql = 'update users set actions = actions_max + 1
          where id = %d';
        $result = db_query($sql, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;

      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
        $outcome_reason .=
          '<div class="title">You get your energy refilled!</div>';

        $sql = 'update users set energy = energy_max
          where id = %d';
        $result = db_query($sql, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;

      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:

        $money = floor(($game_user->income - $game_user->expenses) / 10);
        $outcome_reason .=
          '<div class="title">You get ' . $money . ' ' .
          $game_user->values .'!</div>';

        $sql = 'update users set money = money + %d
          where id = %d';
        $result = db_query($sql, $money, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;

      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
        $outcome_reason .=
          '<div class="title">You get 5 actions!</div>';

        $sql = 'update users set actions = actions + 6
          where id = %d';
        $result = db_query($sql, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;

      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
        $outcome_reason .=
          '<div class="title">You get 100 influence!</div>';

        $sql = 'update users set experience = experience + 100
          where id = %d';
        $result = db_query($sql, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;

      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
        $outcome_reason .=
          '<div class="title">You get 1000 Influence!</div>';

        $sql = 'update users set experience = experience + 1000
          where id = %d';
        $result = db_query($sql, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;

      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
        $outcome_reason .=
          '<div class="title">Ono!</div>
          <div class="subtitle">Your costume ripped and fell off</div>';

        $sql = 'update users set username = real_username
          where id = %d';
        $result = db_query($sql, $game_user->id);
        $can_do_again = FALSE;

        return TRUE;

        // Just for form.
        break;

      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
        $outcome_reason = '<div class="title">Unfortunately</div>
          <div class="subtitle">This home is all out of treats!</div>
          <div class="subtitle">Try another</div>';

        return TRUE;

        // Just for form.
        break;

/*
      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 97:
      case 98:
      case 99:
        $outcome_reason .= '<div class="title">A guy comes out</div>
          <div class="title"><img
            src="/sites/default/files/images/equipment/stlouis-26.png"/></div>
          <div class="subtitle">and hands you a ticket</div>
          <div class="subtitle">&quot;There\'s a party tonight
          in Fountain Park,&quot; he says</div>';

        $sql = 'select quantity from equipment_ownership
          where fkey_equipment_id = 26 and fkey_users_id = %d;';
        $result = db_query($sql, $game_user->id);
        $data = db_fetch_object($result);

        // Already a ticket.
        if (!empty($data)) {

          $sql = 'update equipment_ownership set quantity = 1
            where fkey_equipment_id = 26 and fkey_users_id = %d;';
          $result = db_query($sql, $game_user->id);

          $outcome_reason .= '<div class="title">You already have one, but you
            thank him anyway</div>';

        }
        else {

          $sql = 'insert into equipment_ownership
            (fkey_users_id, fkey_equipment_id, quantity) values
            (%d, 26, 1);';
          $result = db_query($sql, $game_user->id);

          $outcome_reason .= '<div class="title">You take it.&nbsp; This
            might be fun!</div>';

        }

        return TRUE;

        // Just for form.
        break;
*/
      default:
        $outcome_reason .=
          '<div class="title">You get 10 luck!</div>';

        $sql = 'update users set luck = luck + 10
          where id = %d';
        $result = db_query($sql, $game_user->id);

        $candy_used = TRUE;

        // Just for form.
        break;


    }

    if ($candy_used) {

      $sql = 'update neighborhoods set special_int = special_int - 1
        where id = %d;';
      $result = db_query($sql, $game_user->fkey_neighborhoods_id);

    }

    return TRUE;

  }


  function _stlouis_action_check_out_all_the_people_function(&$outcome_reason,
    $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();

    $outcome_reason = '<div class="title">Sorry</div>
      <div class="subtitle">They\'ve all gone home</div>';
    return FALSE;

    // Real function below.

    // No costume!
    if ($game_user->username == $game_user->real_username) {

      $outcome_reason = '<div class="title">Huh?</div>
        <div class="subtitle">You can\'t party without a costume!</div>';
      return FALSE;

    }

    $outcome_reason = '<div class="title">with the Jack-O\'-Lanterns</div>';

    $outcome_reason .= '<div class="title"><img
      src="/sites/default/files/images/actions/stlouis-53.png"/></div>';

    $sql = 'select quantity from equipment_ownership
      where fkey_equipment_id = 27 and fkey_users_id = %d;';
    $result = db_query($sql, $game_user->id);
    $data = db_fetch_object($result);

    // None yet -- give one.
    if (empty($data)) {

      $sql = 'insert into equipment_ownership
        (fkey_users_id, fkey_equipment_id, quantity) values
        (%d, 27, 1);';
      $result = db_query($sql, $game_user->id);

      $outcome_reason .= '<div class="subtitle">The ladies tell you that you
        get the Jack-O\'-Lanterns by talking to people at the party</div>
        <div class="subtitle"><img
          src="/sites/default/files/images/equipment/stlouis-27.png"/></div>
        <div class="subtitle">You can only get up to 10
          by talking with them</div>
        <div class="title">So go meet someone new!</div>';

    }
    else if ($data->quantity >= 10) {

      // Already have ten.
      $outcome_reason .= '<div class="subtitle">The ladies tell you that you
        get the Jack-O\'-Lanterns by talking to people at the party</div>
        <div class="subtitle"><img
          src="/sites/default/files/images/equipment/stlouis-27.png"/></div>
        <div class="subtitle">But you already have ' . $data->quantity .
        '!</div><div class="title">So go meet someone new!</div>';

      $can_do_again = FALSE;

    }
    else {

      // Need one more.
      $outcome_reason .= '<div class="subtitle">The ladies tell you that you
        get the Jack-O\'-Lanterns by talking to people at the party</div>
        <div class="subtitle"><img
          src="/sites/default/files/images/equipment/stlouis-27.png"/></div>
        <div class="subtitle">They give you one more</div>
        <div class="title">Then go meet someone new!</div>';

      $sql = 'update equipment_ownership set quantity = quantity + 1
        where fkey_equipment_id = 27 and fkey_users_id = %d;';
      $result = db_query($sql, $game_user->id);

    }


    return TRUE;

  }

/*
  function _stlouis_action_meet_someone_new_function(&$outcome_reason,
    $target, &$can_do_again) {

    $fetch_user = '_' . arg(0) . '_fetch_user';
    $game_user = zg_fetch_user();

    // Not in Fountain Park?  Act as normal.
    if ($game_user->fkey_neighborhoods_id != 80) return TRUE;

    // Otherwise, we are in Fountain Park.

    // No costume!
    if ($game_user->username == $game_user->real_username) {

      $outcome_reason = '<div class="title">Huh?</div>
        <div class="subtitle">You\'re not getting a Jack-O\'-Lantern
          without a costume!</div>';
      return FALSE;

    }

    $outcome_reason .= '<div class="title">But...</div>
      <div class="subtitle">To get the Jack-O\'-Lantern,<br/>you must post
        on his or her wall!</div>';
    return TRUE;

  }
*/

  function _stlouis_action_hunt_for_zombies_function(&$outcome_reason,
    $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();

    $sql = 'select * from users where meta = "zombie"
      order by abs(level - %d) ASC
      limit 10;';
    $result = db_query($sql, $game_user->level);
    $data = [];
    while ($item = db_fetch_object($result)) $data[] = $item;

    foreach ($data as $item) {

      $sql = 'insert into user_messages (fkey_users_from_id,
        fkey_users_to_id, message) values (%d, %d, "%s");';
      $result = db_query($sql, $item->id, $game_user->id,
        $item->username . ' ' . $item->id . ' loves politicsss...');

    }

    $num = count($data);

    $outcome_reason .= '<div class="subtitle">' . $num .
      ' Dead Presidents have posted on your wall</div>';
    return TRUE;

  }


  function _stlouis_action_hunt_for_zombies_in_your_neighborhood_function
    (&$outcome_reason, $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();

    $sql = 'select * from users
      where meta = "zombie" and fkey_neighborhoods_id = %d
      order by abs(level - %d) ASC
      limit 5;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id, $game_user->level);
    $data = [];
    while ($item = db_fetch_object($result)) $data[] = $item;

    foreach ($data as $item) {

      $sql = 'insert into user_messages (fkey_users_from_id,
        fkey_users_to_id, message) values (%d, %d, "%s");';
      $result = db_query($sql, $item->id, $game_user->id,
        $item->username . ' ' . $item->id . ' loves politicsss...');

    }

    $num = count($data);

    $outcome_reason .= '<div class="subtitle">' . $num .
      ' Dead Presidents have posted on your wall</div>';
    return TRUE;

  }


  function _stlouis_action_sing_christmas_carols_function(&$outcome_reason,
    $target, &$can_do_again) {
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
//    $can_do_again = FALSE;

    $sql = 'select name, special_int from neighborhoods where id = %d;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id);
    $item = db_fetch_object($result); // limited to 1 in db;

    // Grinch!
    if ($item->special_int < 0) {

      if ($item->special_int == -1) {

        $outcome_reason = '<div class="title">Oh no!</div>
          <div class="subtitle">The Grinch has visited ' .
          $item->name . '<br/>and taken all the presents!</div>
          <div class="subsubtitle">Carol ' . abs($item->special_int) .
          ' more time to bring back the Christmas spirit';

        $sql = 'update neighborhoods
          set special_int = 50
          where id = %d;';
        $result = db_query($sql, $game_user->fkey_neighborhoods_id);

      }
      else {

        $outcome_reason = '<div class="title">Oh no!</div>
          <div class="subtitle">The Grinch has visited ' .
          $item->name . '<br/>and taken all the presents!</div>
          <div class="subsubtitle">Carol ' . abs($item->special_int) .
          ' more times to bring back the Christmas spirit';

        $sql = 'update neighborhoods
          set special_int = special_int + 1
          where id = %d;';
        $result = db_query($sql, $game_user->fkey_neighborhoods_id);

      }

//      mail('joseph@cheek.com', 'The grinch has visited ' . $item->name,
//        abs($item->special_int) . ' more carols until it has been restored!');

      return TRUE;

    }

    // Tired of carols.
    if ($item->special_int == 0) {

      $outcome_reason = '<div class="subtitle">The people of ' .
        $item->name . '</div>
        <div class="subtitle">are tired of carolers
        &mdash; try another neighborhood</div>';
/*
      $sql = 'select count(name) as count
        from neighborhoods where special_int < 1;';
      $result = db_query($sql);
      $item2 = db_fetch_object($result); // limited to 1 in db;

      mail('joseph@cheek.com', $item2->count .
        ' neighborhoods tired of caroling',
        'hopefully ' . $item->name . ' will get more soon!');
*/
      return FALSE;

    }

    switch(mt_rand(0, 140)) {

/*
      case 0:
        $outcome_reason .=
          '<div class="title">You got 1 luck!</div>';

        $sql = 'update users set luck = luck + 1
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 1:
        $outcome_reason .=
          '<div class="title">You got 3 luck!</div>';

        $sql = 'update users set luck = luck + 3
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 2:
        $outcome_reason .=
          '<div class="title">You got 5 luck!</div>';

        $sql = 'update users set luck = luck + 5
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;
*/
      case 3:
        $outcome_reason .=
          '<div class="title">You got 10 luck!</div>';

        $sql = 'update users set luck = luck + 10
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
        $outcome_reason = '<div class="title"><img
          src="/sites/default/files/images/stlouis-angry-dog-snow.png"></div>
          <div class="title">BARK BARK BARK!</div>
          <div class="subtitle">A scary dog chases you away</div>';

        return TRUE;

      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
        $outcome_reason = '<div class="title">Sadly</div>
          <div class="subtitle">No one is home 8-(</div>';

        return TRUE;

      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
        $outcome_reason .=
          '<div class="title">You got your actions refilled!</div>';

        $sql = 'update users set actions = actions_max + 1
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
        $outcome_reason .=
          '<div class="title">You got your energy refilled!</div>';

        $sql = 'update users set energy = energy_max
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
        $money = floor(($game_user->income - $game_user->expenses) / 8);
        $outcome_reason .=
          '<div class="title">You got ' . $money . ' ' .
          $game_user->values .'!</div>';

        $sql = 'update users set money = money + %d
          where id = %d';
        $result = db_query($sql, $money, $game_user->id);

        break;

      case 45:
      case 46:
      case 47:
        $money = floor(($game_user->income - $game_user->expenses) / 4);
        $outcome_reason .=
          '<div class="title">You got ' . $money . ' ' .
          $game_user->values .'!</div>';

        $sql = 'update users set money = money + %d
          where id = %d';
        $result = db_query($sql, $money, $game_user->id);

        break;

      case 48:
      case 49:
        $money = floor(($game_user->income - $game_user->expenses) / 2);
        $outcome_reason .=
          '<div class="title">You got ' . $money . ' ' .
          $game_user->values .'!</div>';

        $sql = 'update users set money = money + %d
          where id = %d';
        $result = db_query($sql, $money, $game_user->id);

        break;

      case 50:
        $money = floor(($game_user->income - $game_user->expenses));
        $outcome_reason .=
          '<div class="title">You got ' . $money . ' ' .
          $game_user->values .'!</div>';

        $sql = 'update users set money = money + %d
          where id = %d';
        $result = db_query($sql, $money, $game_user->id);

        break;

      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
        $outcome_reason .=
          '<div class="title">You got 5 actions!</div>';

        $sql = 'update users set actions = actions + 6
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
        $outcome_reason .=
          '<div class="title">You got 100 influence!</div>';

        $sql = 'update users set experience = experience + 100
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
        $outcome_reason .=
          '<div class="title">You got 500 Influence!</div>';

        $sql = 'update users set experience = experience + 500
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
        $outcome_reason .=
          '<div class="title">You got 1000 Influence!</div>';

        $sql = 'update users set experience = experience + 1000
          where id = %d';
        $result = db_query($sql, $game_user->id);

        break;

      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
        $outcome_reason .= '<div class="title">A guy comes out</div>
          <div class="subtitle">and hands you a gingerbread cookie (+10 End)</div>
          <div class="title"><img
            src="/sites/default/files/images/equipment/stlouis-29.png"/></div>
          <div class="subtitle">&quot;You must be hungry!&quot; he says</div>';

        $sql = 'select quantity from equipment_ownership
          where fkey_equipment_id = 29 and fkey_users_id = %d;';
        $result = db_query($sql, $game_user->id);
        $data = db_fetch_object($result);

        // Already a cookie.
        if (!empty($data)) {

          $sql = 'update equipment_ownership set quantity = quantity + 1
            where fkey_equipment_id = 29 and fkey_users_id = %d;';
          $result = db_query($sql, $game_user->id);

        }
        else {

          $sql = 'insert into equipment_ownership
            (fkey_users_id, fkey_equipment_id, quantity) values
            (%d, 29, 1);';
          $result = db_query($sql, $game_user->id);

        }

        break;

      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 97:
      case 98:
      case 99:
        $outcome_reason .= '<div class="title">A lady comes out</div>
          <div class="subtitle">and hands you a mug of hot apple cider
            (+10 Elo)</div>
          <div class="title"><img
            src="/sites/default/files/images/equipment/stlouis-30.png"/></div>
          <div class="subtitle">&quot;You must be cold!&quot; she says</div>';

        $sql = 'select quantity from equipment_ownership
          where fkey_equipment_id = 30 and fkey_users_id = %d;';
        $result = db_query($sql, $game_user->id);
        $data = db_fetch_object($result);

        // Already a mug.
        if (!empty($data)) {

          $sql = 'update equipment_ownership set quantity = quantity + 1
            where fkey_equipment_id = 30 and fkey_users_id = %d;';
          $result = db_query($sql, $game_user->id);

        }
        else {

          $sql = 'insert into equipment_ownership
            (fkey_users_id, fkey_equipment_id, quantity) values
            (%d, 30, 1);';
          $result = db_query($sql, $game_user->id);

        }

        break;

      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
        $outcome_reason .= '<div class="title">A kid comes out</div>
          <div class="subtitle">and hands you a candy cane
            (+10 Init)</div>
          <div class="title"><img
            src="/sites/default/files/images/equipment/stlouis-31.png"/></div>
          <div class="subtitle">&quot;You must be tired!&quot; he says</div>';

        $sql = 'select quantity from equipment_ownership
          where fkey_equipment_id = 31 and fkey_users_id = %d;';
        $result = db_query($sql, $game_user->id);
        $data = db_fetch_object($result);

        // Already a candy cane.
        if (!empty($data)) {

          $sql = 'update equipment_ownership set quantity = quantity + 1
            where fkey_equipment_id = 31 and fkey_users_id = %d;';
          $result = db_query($sql, $game_user->id);

        }
        else {

          $sql = 'insert into equipment_ownership
            (fkey_users_id, fkey_equipment_id, quantity) values
            (%d, 31, 1);';
          $result = db_query($sql, $game_user->id);

        }

        break;

      default:
        $outcome_reason = '<div class="title">Beaming with happiness</div>
          <div class="subtitle">the family seems to enjoy your vocals</div>';

    }

    $sql = 'update neighborhoods set special_int = special_int - 1
      where id = %d;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id);

    return TRUE;

  }


  function _stlouis_action_throw_a_snowball_function(&$outcome_reason,
    $target) {

    global $game, $phone_id;
    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();

    $outcome_reason .= '<div class="action-effect">' .
      t('Poof!') . '</div>';

    $sql = 'update neighborhoods set special_int = special_int - 3
      where id = %d;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id);

    return TRUE;

  }

  function _stlouis_action_spend_some_funds_function(&$outcome_reason,
    $target, &$can_do_again) {

    global $game, $phone_id;
firep($target);

    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
    $action_id = arg(3);
//    $can_do_again = FALSE;

    $target_name = $target->ep_name . ' ' . $target->username;
    $target_id = $_GET['target'];

    $sql = 'SELECT count(*) as count FROM `challenge_history`
      WHERE fkey_from_users_id = %d
      and fkey_to_users_id = %d
      and type = "gift"
      and timestamp like "%s";';
    $result = db_query($sql, $game_user->id, $target_id, date('Y-m-d%'));
    $item = db_fetch_object($result);

    // Can only do it six times per day.
    if ($item->count >= 6) {

      $outcome_reason = '<div class="action-effect">' . $target_name .
        ' has received too many funds today.&nbsp; Please try again another
        day.';

      return FALSE;

    }

    $sql = 'select count(id) as count from users
      where fkey_neighborhoods_id = %d;';
    $result = db_query($sql, $game_user->fkey_neighborhoods_id);
    $item = db_fetch_object($result);

    $money = floor(10000 / $item->count);

    $sql = 'update users set money = money + %d where id = %d;';
    $result = db_query($sql, $money, $target_id);
    $outcome_reason .= '<div class="action-effect">' . $target_name . '\'s ' .
      $game_user->values . ' is increased by ' . $money . ' (' .
      $item->count . ' players here)</div>';

    $sql = 'insert into challenge_history
      (type, fkey_from_users_id, fkey_to_users_id, fkey_neighborhoods_id,
      fkey_elected_positions_id, won, desc_short, desc_long) values
      ("gift", %d, %d, %d, %d, %d, "%s", "%s");';
    $result = db_query($sql, $game_user->id, $target_id,
      $game_user->fkey_neighborhoods_id, $target->ep_id, 0,
      "$game_user->username spent some funds for $target_name.",
      "$game_user->username spent $money $game_user->values for " .
      $target_name . '.');

    return TRUE;

  }


  function _stlouis_action_tag_a_player_function(&$outcome_reason,
    $target, &$can_do_again) {

    global $game, $phone_id;

    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
    $action_id = arg(3);
    $can_do_again = FALSE;

    $target_name = $target->ep_name . ' ' . $target->username;
    $target_id = $_GET['target'];

    // In a taggable hood?
/* nowhere is safe
    if ($game_user->fkey_neighborhoods_id == 37 ||
      $game_user->fkey_neighborhoods_id > 79) {

      $outcome_reason = '<div class="title">No tagging here</div>
        <div class="subtitle">Try another neighborhood</div>';

      return FALSE;

    }
*/

    // Out of ammo?
    $sql = 'select quantity from equipment_ownership
      where fkey_users_id = %d and fkey_equipment_id = 40;';
    $result = db_query($sql, $game_user->id);
    $item = db_fetch_object($result);

    if ($item->quantity <= 0) {

      $outcome_reason = '<div class="title">No Ammunition!</div>
        <div class="subtitle">Go to Midtown to get some more</div>';

      return FALSE;

    }

    // No target specified.
    if ($target_id == '') {

      $data = [];
      $sql = 'SELECT users.username, users.id,
        clan_members.is_clan_leader, clans.acronym AS clan_acronym,
        NULL as ep_name
        FROM users
        LEFT OUTER JOIN clan_members ON clan_members.fkey_users_id = users.id
        LEFT OUTER JOIN clans ON clan_members.fkey_clans_id = clans.id
        WHERE fkey_neighborhoods_id = %d
        AND users.fkey_values_id <> %d
        AND users.username <> ""
        AND users.meta <> "frozen"
        AND users.last_access > "2013-02-01"
        ORDER BY RAND() LIMIT 20;';

      $result = db_query($sql, $game_user->fkey_neighborhoods_id,
        $game_user->fkey_values_id);
      while ($user = db_fetch_object($result)) $data[] = $user;

      $outcome_reason = '<div class="title">Whom Would You Like to Tag?</div>';

      foreach ($data as $user) {

        $outcome_reason .= <<< EOF
<div class="subtitle"><a href=
"/$game/actions_do/$arg2/$action_id?target=$user->id">$user->username</a></div>
EOF;

      }

      return FALSE;

    }

    // Camouflage?
    $sql = 'select quantity from equipment_ownership
      where fkey_users_id = %d and fkey_equipment_id = 42;';
    $result = db_query($sql, $target_id);
    $item = db_fetch_object($result);

    if ($item->quantity > 0) {

      $sql = 'update equipment_ownership set quantity = quantity - 1
        where fkey_users_id = %d and fkey_equipment_id = 42;';
      $result = db_query($sql, $target_id);

      // Miss.
      if (mt_rand(1, 3) < 3) {

        $outcome_reason = '<div class="subsubtitle">You had ' . $target_name .
          ' in your sights, but lost him or her in the camouflage.</div>';

        return FALSE;

      }

    }

    // Tag the player!

    // Create entry for tagger, taggee, if needed.
    $sql = 'select id from event_points where fkey_users_id = %d;';
    $result = db_query($sql, $target_id);
    $row = db_fetch_object($result);

    if (empty($row)) {

      $sql = 'insert into event_points set fkey_users_id = %d;';
      $result = db_query($sql, $target_id);

    }

    $sql = 'select * from event_points where fkey_users_id = %d;';
    $result = db_query($sql, $game_user->id);
    $row = db_fetch_object($result);

    if (empty($row)) {

      $sql = 'insert into event_points set fkey_users_id = %d;';
      $result = db_query($sql, $game_user->id);

    }

    // Mark as frozen, reset tags_con and heals_con.
    $sql = 'update users set meta = "frozen" where id = %d;';
    $result = db_query($sql, $target_id);

    $sql = 'update event_points set tags_con = 0, heals_con = 0
      where fkey_users_id = %d;';
    $result = db_query($sql, $target_id);

    // Update points.
    $tags_con = $row->tags_con + 1;
    $points = $row->points + min($tags_con, 20);

    $sql = 'update event_points set tags_con = %d, points = %d
      where fkey_users_id = %d;';
    $result = db_query($sql, $tags_con, $points, $game_user->id);

    $outcome_reason .= '<div class="subsubtitle">You have ' . $tags_con .
      ' consecutive tag(s) and ' . $points . ' point(s)</div>';

    // Use up ammo.
    $sql = 'update equipment_ownership set quantity = quantity - 1
      where fkey_users_id = %d and fkey_equipment_id = 40;';
    $result = db_query($sql, $game_user->id);

    // Add tag message.
    $sql = 'insert into challenge_messages
      (fkey_users_from_id, fkey_users_to_id, message)
      values (%d, %d, "%s");';
    $message = t('%user tagged you!',
      ['%user' => $game_user->username]);
    $result = db_query($sql, $game_user->id, $target_id, $message);

    return TRUE;

  }

  function _stlouis_action_unfreeze_a_player_function(&$outcome_reason,
    $target, &$can_do_again) {

    global $game, $phone_id;

    include drupal_get_path('module', 'zg') . '/includes/' . $game . '_defs.inc';
    $game_user = zg_fetch_user();
    $action_id = arg(3);
    $can_do_again = FALSE;

    $target_name = $target->ep_name . ' ' . $target->username;
    $target_id = $_GET['target'];
/*

    // In a taggable hood?
    if ($game_user->fkey_neighborhoods_id == 37 ||
      $game_user->fkey_neighborhoods_id > 79) {

      $outcome_reason = '<div class="title">No unfreezing here</div>
        <div class="subtitle">Try another neighborhood</div>';

      return FALSE;

    }
*/

    // No target specified.
    if ($target_id == '') {

      $data = [];
      $sql = 'SELECT users.username, users.id,
        clan_members.is_clan_leader, clans.acronym AS clan_acronym,
        NULL as ep_name
        FROM users
        LEFT OUTER JOIN clan_members ON clan_members.fkey_users_id = users.id
        LEFT OUTER JOIN clans ON clan_members.fkey_clans_id = clans.id
        WHERE fkey_neighborhoods_id = %d
        AND users.fkey_values_id = %d
        AND users.username <> ""
        AND users.meta = "frozen"
        ORDER BY RAND() LIMIT 20;';

      $result = db_query($sql, $game_user->fkey_neighborhoods_id,
        $game_user->fkey_values_id);
      while ($user = db_fetch_object($result)) $data[] = $user;

      $outcome_reason = '<div class="title">Frozen Players
        in your Neighborhood</div>';

      foreach ($data as $user) {

        $outcome_reason .= <<< EOF
<div class="subtitle"><a href=
"/$game/actions_do/$arg2/$action_id?target=$user->id">$user->username</a></div>
EOF;

      }

      if (empty($data)) $outcome_reason .= '<div class="subtitle">
        None</div>';

      $data = [];
      $sql = 'SELECT users.username, users.id,
        clan_members.is_clan_leader, clans.acronym AS clan_acronym,
        NULL as ep_name,
        neighborhoods.name as hood, neighborhoods.id as hood_id
        FROM users
        LEFT OUTER JOIN clan_members ON clan_members.fkey_users_id = users.id
        LEFT OUTER JOIN clans ON clan_members.fkey_clans_id = clans.id
        LEFT JOIN neighborhoods
          ON neighborhoods.id = users.fkey_neighborhoods_id

        WHERE fkey_neighborhoods_id <> %d
        AND users.fkey_values_id = %d
        AND users.username <> ""
        AND users.meta = "frozen"
        ORDER BY RAND() LIMIT 20;';

      $result = db_query($sql, $game_user->fkey_neighborhoods_id,
        $game_user->fkey_values_id);
      while ($user = db_fetch_object($result)) $data[] = $user;

      $outcome_reason .= '<div class="title">Frozen Players
        in other Neighborhoods</div>';

      foreach ($data as $user) {

        $outcome_reason .= <<< EOF
<div class="subtitle"><a href=
"/$game/actions_do/$arg2/$action_id?target=$user->id">$user->username</a>
<a href="/$game/move/$arg2/$user->hood_id">($user->hood)</a></div>
EOF;

      }

      if (empty($data)) $outcome_reason .= '<div class="subtitle">
        None</div>';

      $outcome_reason .= '<div class="try-an-election-wrapper"><div
        class="try-an-election"><a
        href="/' . $game . '/actions_do/' . $arg2 . '/' . $action_id .
        '">Check the list again</a></div></div>';

      return FALSE;

    }

    // Not in same hood.
    if ($game_user->fkey_neighborhoods_id != $target->fkey_neighborhoods_id) {

      $outcome_reason = '<div class="title">Not in same neighborhood!</div>
        <div class="subtitle">You must be in the same hood to unfreeze</div>';

      $outcome_reason .= '<div class="try-an-election-wrapper"><div
        class="try-an-election"><a
        href="/' . $game . '/actions_do/' . $arg2 . '/' . $action_id .
        '">Check the list again</a></div></div>';

      return FALSE;

    }

    // Unfreeze the player.

    // Create entry for tagger, taggee, if needed.
    $sql = 'select id from event_points where fkey_users_id = %d;';
    $result = db_query($sql, $target_id);
    $row = db_fetch_object($result);

    if (empty($row)) {

      $sql = 'insert into event_points set fkey_users_id = %d;';
      $result = db_query($sql, $target_id);

    }

    $sql = 'select * from event_points where fkey_users_id = %d;';
    $result = db_query($sql, $game_user->id);
    $row = db_fetch_object($result);

    if (empty($row)) {

      $sql = 'insert into event_points set fkey_users_id = %d;';
      $result = db_query($sql, $game_user->id);

    }

    // Mark as unfrozen.
    $sql = 'update users set meta = "" where id = %d;';
    $result = db_query($sql, $target_id);

    // Update points.
    $heals_con = $row->heals_con + 1;
    $points = $row->points + min($heals_con, 20) + 1;

    $sql = 'update event_points set heals_con = %d, points = %d
      where fkey_users_id = %d;';
    $result = db_query($sql, $heals_con, $points, $game_user->id);

    $outcome_reason .= '<div class="subsubtitle">You have ' . $heals_con .
      ' consecutive heal(s) and ' . $points . ' point(s)</div>';

    // Add unfreeze message.
    $sql = 'insert into challenge_messages
      (fkey_users_from_id, fkey_users_to_id, message)
      values (%d, %d, "%s");';
    $message = t('%user unfroze you!',
      ['%user' => $game_user->username]);
    $result = db_query($sql, $game_user->id, $target_id, $message);

   return TRUE;

  }
